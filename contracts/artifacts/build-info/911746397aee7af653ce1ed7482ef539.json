{
	"id": "911746397aee7af653ce1ed7482ef539",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.17;\npragma abicoder v2;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\n\ncontract SimpleSwap {\n    ISwapRouter public immutable swapRouter;\n    address public constant TKN = 0x221c91a7fDb68C855a8A52CA7F18F2dcedAc8c2b;\n    address public constant VTRU = 0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922;\n    uint24 public constant feeTier = 3000;\n\n    constructor(ISwapRouter _swapRouter) {\n        swapRouter = _swapRouter;\n    }\n\n    function swapVTRUForTKN(\n        uint256 amountIn\n    ) external returns (uint256 amountOut) {\n        // Transfer the specified amount of VTRU to this contract.\n        TransferHelper.safeTransferFrom(\n            VTRU,\n            msg.sender,\n            address(this),\n            amountIn\n        );\n        // Approve the router to spend VTRU.\n        TransferHelper.safeApprove(VTRU, address(swapRouter), amountIn);\n        // Note: To use this example, you should explicitly set slippage limits, omitting for simplicity\n        uint256 minOut = /* Calculate min output */ 0;\n        uint160 priceLimit = /* Calculate price limit */ 0;\n        // Create the params that will be used to execute the swap\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams({\n                tokenIn: VTRU,\n                tokenOut: TKN,\n                fee: feeTier,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: minOut,\n                sqrtPriceLimitX96: priceLimit\n            });\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n}"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleSwap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "TKN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VTRU",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTier",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapVTRUForTKN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleSwap.sol\":232:1845  contract SimpleSwap {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/SimpleSwap.sol\":504:582  constructor(ISwapRouter _swapRouter) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleSwap.sol\":564:575  _swapRouter */\n  dup1\n    /* \"contracts/SimpleSwap.sol\":551:575  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SimpleSwap.sol\":504:582  constructor(ISwapRouter _swapRouter) {... */\n  pop\n    /* \"contracts/SimpleSwap.sol\":232:1845  contract SimpleSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_23\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_25\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_26:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_28\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1431   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1168:1177   */\n  dup3\n    /* \"#utility.yul\":1159:1166   */\n  dup5\n    /* \"#utility.yul\":1155:1178   */\n  sub\n    /* \"#utility.yul\":1151:1183   */\n  slt\n    /* \"#utility.yul\":1148:1267   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1186:1265   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1148:1267   */\ntag_30:\n    /* \"#utility.yul\":1306:1307   */\n  0x00\n    /* \"#utility.yul\":1331:1414   */\n  tag_32\n    /* \"#utility.yul\":1406:1413   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1386:1395   */\n  dup6\n    /* \"#utility.yul\":1382:1404   */\n  add\n    /* \"#utility.yul\":1331:1414   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1321:1414   */\n  swap2\n  pop\n    /* \"#utility.yul\":1277:1424   */\n  pop\n    /* \"#utility.yul\":1042:1431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SimpleSwap.sol\":232:1845  contract SimpleSwap {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleSwap.sol\":232:1845  contract SimpleSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a5dae38\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x72f5d98a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xab8feb02\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeb90cec1\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleSwap.sol\":381:454  address public constant VTRU = 0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922 */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":460:497  uint24 public constant feeTier = 3000 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":303:375  address public constant TKN = 0x221c91a7fDb68C855a8A52CA7F18F2dcedAc8c2b */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":258:297  ISwapRouter public immutable swapRouter */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":588:1843  function swapVTRUForTKN(... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap.sol\":381:454  address public constant VTRU = 0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922 */\n    tag_9:\n        /* \"contracts/SimpleSwap.sol\":412:454  0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922 */\n      0xac51c04cb72a5d0f56d71baf3e2f2b28e6426922\n        /* \"contracts/SimpleSwap.sol\":381:454  address public constant VTRU = 0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922 */\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":460:497  uint24 public constant feeTier = 3000 */\n    tag_13:\n        /* \"contracts/SimpleSwap.sol\":493:497  3000 */\n      0x0bb8\n        /* \"contracts/SimpleSwap.sol\":460:497  uint24 public constant feeTier = 3000 */\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":303:375  address public constant TKN = 0x221c91a7fDb68C855a8A52CA7F18F2dcedAc8c2b */\n    tag_17:\n        /* \"contracts/SimpleSwap.sol\":333:375  0x221c91a7fDb68C855a8A52CA7F18F2dcedAc8c2b */\n      0x221c91a7fdb68c855a8a52ca7f18f2dcedac8c2b\n        /* \"contracts/SimpleSwap.sol\":303:375  address public constant TKN = 0x221c91a7fDb68C855a8A52CA7F18F2dcedAc8c2b */\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":258:297  ISwapRouter public immutable swapRouter */\n    tag_20:\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleSwap.sol\":588:1843  function swapVTRUForTKN(... */\n    tag_26:\n        /* \"contracts/SimpleSwap.sol\":662:679  uint256 amountOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":758:890  TransferHelper.safeTransferFrom(... */\n      tag_30\n        /* \"contracts/SimpleSwap.sol\":412:454  0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922 */\n      0xac51c04cb72a5d0f56d71baf3e2f2b28e6426922\n        /* \"contracts/SimpleSwap.sol\":821:831  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap.sol\":853:857  this */\n      address\n        /* \"contracts/SimpleSwap.sol\":872:880  amountIn */\n      dup6\n        /* \"contracts/SimpleSwap.sol\":758:789  TransferHelper.safeTransferFrom */\n      tag_31\n        /* \"contracts/SimpleSwap.sol\":758:890  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_30:\n        /* \"contracts/SimpleSwap.sol\":945:1008  TransferHelper.safeApprove(VTRU, address(swapRouter), amountIn) */\n      tag_32\n        /* \"contracts/SimpleSwap.sol\":412:454  0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922 */\n      0xac51c04cb72a5d0f56d71baf3e2f2b28e6426922\n        /* \"contracts/SimpleSwap.sol\":986:996  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"contracts/SimpleSwap.sol\":999:1007  amountIn */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":945:971  TransferHelper.safeApprove */\n      tag_33\n        /* \"contracts/SimpleSwap.sol\":945:1008  TransferHelper.safeApprove(VTRU, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/SimpleSwap.sol\":1123:1137  uint256 minOut */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1178:1196  uint160 priceLimit */\n      dup1\n        /* \"contracts/SimpleSwap.sol\":1305:1353  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SimpleSwap.sol\":412:454  0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922 */\n      0xac51c04cb72a5d0f56d71baf3e2f2b28e6426922\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":333:375  0x221c91a7fDb68C855a8A52CA7F18F2dcedAc8c2b */\n      0x221c91a7fdb68c855a8a52ca7f18f2dcedac8c2b\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":493:497  3000 */\n      0x0bb8\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1525:1535  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1563:1578  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1606:1614  amountIn */\n      dup7\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1650:1656  minOut */\n      dup5\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleSwap.sol\":1693:1703  priceLimit */\n      dup4\n        /* \"contracts/SimpleSwap.sol\":1356:1718  ISwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/SimpleSwap.sol\":1305:1718  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter... */\n      swap1\n      pop\n        /* \"contracts/SimpleSwap.sol\":1801:1811  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"contracts/SimpleSwap.sol\":1801:1828  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/SimpleSwap.sol\":1829:1835  params */\n      dup3\n        /* \"contracts/SimpleSwap.sol\":1801:1836  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/SimpleSwap.sol\":1789:1836  amountOut = swapRouter.exactInputSingle(params) */\n      swap4\n      pop\n        /* \"contracts/SimpleSwap.sol\":681:1843  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleSwap.sol\":588:1843  function swapVTRUForTKN(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_31:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_41\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_47\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_46)\n    tag_47:\n      0x60\n      swap2\n      pop\n    tag_46:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_48\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_49\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_49:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_48:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_33:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_58:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_61\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_60)\n    tag_61:\n      0x60\n      swap2\n      pop\n    tag_60:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_62\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_63\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_64:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_63:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_62:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_68:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_69:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_106\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_68\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_70:\n        /* \"#utility.yul\":328:352   */\n      tag_108\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_69\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_110\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_70\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:684   */\n    tag_71:\n        /* \"#utility.yul\":629:636   */\n      0x00\n        /* \"#utility.yul\":669:677   */\n      0xffffff\n        /* \"#utility.yul\":662:667   */\n      dup3\n        /* \"#utility.yul\":658:678   */\n      and\n        /* \"#utility.yul\":647:678   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:805   */\n    tag_72:\n        /* \"#utility.yul\":775:798   */\n      tag_113\n        /* \"#utility.yul\":792:797   */\n      dup2\n        /* \"#utility.yul\":775:798   */\n      tag_71\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":770:773   */\n      dup3\n        /* \"#utility.yul\":763:799   */\n      mstore\n        /* \"#utility.yul\":690:805   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":811:1029   */\n    tag_15:\n        /* \"#utility.yul\":902:906   */\n      0x00\n        /* \"#utility.yul\":940:942   */\n      0x20\n        /* \"#utility.yul\":929:938   */\n      dup3\n        /* \"#utility.yul\":925:943   */\n      add\n        /* \"#utility.yul\":917:943   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:1022   */\n      tag_115\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":1004:1021   */\n      add\n        /* \"#utility.yul\":995:1001   */\n      dup5\n        /* \"#utility.yul\":953:1022   */\n      tag_72\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":811:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1095   */\n    tag_73:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1084:1089   */\n      dup2\n        /* \"#utility.yul\":1077:1089   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1243   */\n    tag_74:\n        /* \"#utility.yul\":1151:1160   */\n      0x00\n        /* \"#utility.yul\":1184:1237   */\n      tag_118\n        /* \"#utility.yul\":1202:1236   */\n      tag_119\n        /* \"#utility.yul\":1211:1235   */\n      tag_120\n        /* \"#utility.yul\":1229:1234   */\n      dup5\n        /* \"#utility.yul\":1211:1235   */\n      tag_68\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1202:1236   */\n      tag_73\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1184:1237   */\n      tag_68\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1171:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1101:1243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1249:1375   */\n    tag_75:\n        /* \"#utility.yul\":1299:1308   */\n      0x00\n        /* \"#utility.yul\":1332:1369   */\n      tag_122\n        /* \"#utility.yul\":1363:1368   */\n      dup3\n        /* \"#utility.yul\":1332:1369   */\n      tag_74\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1319:1369   */\n      swap1\n      pop\n        /* \"#utility.yul\":1249:1375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1526   */\n    tag_76:\n        /* \"#utility.yul\":1450:1459   */\n      0x00\n        /* \"#utility.yul\":1483:1520   */\n      tag_124\n        /* \"#utility.yul\":1514:1519   */\n      dup3\n        /* \"#utility.yul\":1483:1520   */\n      tag_75\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1470:1520   */\n      swap1\n      pop\n        /* \"#utility.yul\":1381:1526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1701   */\n    tag_77:\n        /* \"#utility.yul\":1638:1694   */\n      tag_126\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1638:1694   */\n      tag_76\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1633:1636   */\n      dup3\n        /* \"#utility.yul\":1626:1695   */\n      mstore\n        /* \"#utility.yul\":1532:1701   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1967   */\n    tag_22:\n        /* \"#utility.yul\":1819:1823   */\n      0x00\n        /* \"#utility.yul\":1857:1859   */\n      0x20\n        /* \"#utility.yul\":1846:1855   */\n      dup3\n        /* \"#utility.yul\":1842:1860   */\n      add\n        /* \"#utility.yul\":1834:1860   */\n      swap1\n      pop\n        /* \"#utility.yul\":1870:1960   */\n      tag_128\n        /* \"#utility.yul\":1957:1958   */\n      0x00\n        /* \"#utility.yul\":1946:1955   */\n      dup4\n        /* \"#utility.yul\":1942:1959   */\n      add\n        /* \"#utility.yul\":1933:1939   */\n      dup5\n        /* \"#utility.yul\":1870:1960   */\n      tag_77\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1707:1967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2054:2171   */\n    tag_79:\n        /* \"#utility.yul\":2163:2164   */\n      0x00\n        /* \"#utility.yul\":2160:2161   */\n      dup1\n        /* \"#utility.yul\":2153:2165   */\n      revert\n        /* \"#utility.yul\":2300:2377   */\n    tag_81:\n        /* \"#utility.yul\":2337:2344   */\n      0x00\n        /* \"#utility.yul\":2366:2371   */\n      dup2\n        /* \"#utility.yul\":2355:2371   */\n      swap1\n      pop\n        /* \"#utility.yul\":2300:2377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2383:2505   */\n    tag_82:\n        /* \"#utility.yul\":2456:2480   */\n      tag_134\n        /* \"#utility.yul\":2474:2479   */\n      dup2\n        /* \"#utility.yul\":2456:2480   */\n      tag_81\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2449:2454   */\n      dup2\n        /* \"#utility.yul\":2446:2481   */\n      eq\n        /* \"#utility.yul\":2436:2499   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2492:2493   */\n      dup1\n        /* \"#utility.yul\":2485:2497   */\n      revert\n        /* \"#utility.yul\":2436:2499   */\n    tag_135:\n        /* \"#utility.yul\":2383:2505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2650   */\n    tag_83:\n        /* \"#utility.yul\":2557:2562   */\n      0x00\n        /* \"#utility.yul\":2595:2601   */\n      dup2\n        /* \"#utility.yul\":2582:2602   */\n      calldataload\n        /* \"#utility.yul\":2573:2602   */\n      swap1\n      pop\n        /* \"#utility.yul\":2611:2644   */\n      tag_137\n        /* \"#utility.yul\":2638:2643   */\n      dup2\n        /* \"#utility.yul\":2611:2644   */\n      tag_82\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2511:2650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2656:2985   */\n    tag_25:\n        /* \"#utility.yul\":2715:2721   */\n      0x00\n        /* \"#utility.yul\":2764:2766   */\n      0x20\n        /* \"#utility.yul\":2752:2761   */\n      dup3\n        /* \"#utility.yul\":2743:2750   */\n      dup5\n        /* \"#utility.yul\":2739:2762   */\n      sub\n        /* \"#utility.yul\":2735:2767   */\n      slt\n        /* \"#utility.yul\":2732:2851   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2770:2849   */\n      tag_140\n      tag_79\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2732:2851   */\n    tag_139:\n        /* \"#utility.yul\":2890:2891   */\n      0x00\n        /* \"#utility.yul\":2915:2968   */\n      tag_141\n        /* \"#utility.yul\":2960:2967   */\n      dup5\n        /* \"#utility.yul\":2951:2957   */\n      dup3\n        /* \"#utility.yul\":2940:2949   */\n      dup6\n        /* \"#utility.yul\":2936:2958   */\n      add\n        /* \"#utility.yul\":2915:2968   */\n      tag_83\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2905:2968   */\n      swap2\n      pop\n        /* \"#utility.yul\":2861:2978   */\n      pop\n        /* \"#utility.yul\":2656:2985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3109   */\n    tag_84:\n        /* \"#utility.yul\":3078:3102   */\n      tag_143\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3078:3102   */\n      tag_81\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3073:3076   */\n      dup3\n        /* \"#utility.yul\":3066:3103   */\n      mstore\n        /* \"#utility.yul\":2991:3109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3337   */\n    tag_28:\n        /* \"#utility.yul\":3208:3212   */\n      0x00\n        /* \"#utility.yul\":3246:3248   */\n      0x20\n        /* \"#utility.yul\":3235:3244   */\n      dup3\n        /* \"#utility.yul\":3231:3249   */\n      add\n        /* \"#utility.yul\":3223:3249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3259:3330   */\n      tag_145\n        /* \"#utility.yul\":3327:3328   */\n      0x00\n        /* \"#utility.yul\":3316:3325   */\n      dup4\n        /* \"#utility.yul\":3312:3329   */\n      add\n        /* \"#utility.yul\":3303:3309   */\n      dup5\n        /* \"#utility.yul\":3259:3330   */\n      tag_84\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3115:3337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3451   */\n    tag_85:\n        /* \"#utility.yul\":3420:3444   */\n      tag_147\n        /* \"#utility.yul\":3438:3443   */\n      dup2\n        /* \"#utility.yul\":3420:3444   */\n      tag_69\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3415:3418   */\n      dup3\n        /* \"#utility.yul\":3408:3445   */\n      mstore\n        /* \"#utility.yul\":3343:3451   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3457:3562   */\n    tag_86:\n        /* \"#utility.yul\":3532:3555   */\n      tag_149\n        /* \"#utility.yul\":3549:3554   */\n      dup2\n        /* \"#utility.yul\":3532:3555   */\n      tag_71\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3527:3530   */\n      dup3\n        /* \"#utility.yul\":3520:3556   */\n      mstore\n        /* \"#utility.yul\":3457:3562   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3568:3676   */\n    tag_87:\n        /* \"#utility.yul\":3645:3669   */\n      tag_151\n        /* \"#utility.yul\":3663:3668   */\n      dup2\n        /* \"#utility.yul\":3645:3669   */\n      tag_81\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3640:3643   */\n      dup3\n        /* \"#utility.yul\":3633:3670   */\n      mstore\n        /* \"#utility.yul\":3568:3676   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3790   */\n    tag_88:\n        /* \"#utility.yul\":3759:3783   */\n      tag_153\n        /* \"#utility.yul\":3777:3782   */\n      dup2\n        /* \"#utility.yul\":3759:3783   */\n      tag_68\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3754:3757   */\n      dup3\n        /* \"#utility.yul\":3747:3784   */\n      mstore\n        /* \"#utility.yul\":3682:3790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3890:5513   */\n    tag_89:\n        /* \"#utility.yul\":4065:4071   */\n      0x0100\n        /* \"#utility.yul\":4060:4063   */\n      dup3\n        /* \"#utility.yul\":4056:4072   */\n      add\n        /* \"#utility.yul\":4157:4161   */\n      0x00\n        /* \"#utility.yul\":4150:4155   */\n      dup3\n        /* \"#utility.yul\":4146:4162   */\n      add\n        /* \"#utility.yul\":4140:4163   */\n      mload\n        /* \"#utility.yul\":4176:4239   */\n      tag_155\n        /* \"#utility.yul\":4233:4237   */\n      0x00\n        /* \"#utility.yul\":4228:4231   */\n      dup6\n        /* \"#utility.yul\":4224:4238   */\n      add\n        /* \"#utility.yul\":4210:4222   */\n      dup3\n        /* \"#utility.yul\":4176:4239   */\n      tag_85\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4082:4249   */\n      pop\n        /* \"#utility.yul\":4335:4339   */\n      0x20\n        /* \"#utility.yul\":4328:4333   */\n      dup3\n        /* \"#utility.yul\":4324:4340   */\n      add\n        /* \"#utility.yul\":4318:4341   */\n      mload\n        /* \"#utility.yul\":4354:4417   */\n      tag_156\n        /* \"#utility.yul\":4411:4415   */\n      0x20\n        /* \"#utility.yul\":4406:4409   */\n      dup6\n        /* \"#utility.yul\":4402:4416   */\n      add\n        /* \"#utility.yul\":4388:4400   */\n      dup3\n        /* \"#utility.yul\":4354:4417   */\n      tag_85\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4259:4427   */\n      pop\n        /* \"#utility.yul\":4508:4512   */\n      0x40\n        /* \"#utility.yul\":4501:4506   */\n      dup3\n        /* \"#utility.yul\":4497:4513   */\n      add\n        /* \"#utility.yul\":4491:4514   */\n      mload\n        /* \"#utility.yul\":4527:4588   */\n      tag_157\n        /* \"#utility.yul\":4582:4586   */\n      0x40\n        /* \"#utility.yul\":4577:4580   */\n      dup6\n        /* \"#utility.yul\":4573:4587   */\n      add\n        /* \"#utility.yul\":4559:4571   */\n      dup3\n        /* \"#utility.yul\":4527:4588   */\n      tag_86\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4437:4598   */\n      pop\n        /* \"#utility.yul\":4685:4689   */\n      0x60\n        /* \"#utility.yul\":4678:4683   */\n      dup3\n        /* \"#utility.yul\":4674:4690   */\n      add\n        /* \"#utility.yul\":4668:4691   */\n      mload\n        /* \"#utility.yul\":4704:4767   */\n      tag_158\n        /* \"#utility.yul\":4761:4765   */\n      0x60\n        /* \"#utility.yul\":4756:4759   */\n      dup6\n        /* \"#utility.yul\":4752:4766   */\n      add\n        /* \"#utility.yul\":4738:4750   */\n      dup3\n        /* \"#utility.yul\":4704:4767   */\n      tag_85\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4608:4777   */\n      pop\n        /* \"#utility.yul\":4863:4867   */\n      0x80\n        /* \"#utility.yul\":4856:4861   */\n      dup3\n        /* \"#utility.yul\":4852:4868   */\n      add\n        /* \"#utility.yul\":4846:4869   */\n      mload\n        /* \"#utility.yul\":4882:4945   */\n      tag_159\n        /* \"#utility.yul\":4939:4943   */\n      0x80\n        /* \"#utility.yul\":4934:4937   */\n      dup6\n        /* \"#utility.yul\":4930:4944   */\n      add\n        /* \"#utility.yul\":4916:4928   */\n      dup3\n        /* \"#utility.yul\":4882:4945   */\n      tag_87\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4787:4955   */\n      pop\n        /* \"#utility.yul\":5041:5045   */\n      0xa0\n        /* \"#utility.yul\":5034:5039   */\n      dup3\n        /* \"#utility.yul\":5030:5046   */\n      add\n        /* \"#utility.yul\":5024:5047   */\n      mload\n        /* \"#utility.yul\":5060:5123   */\n      tag_160\n        /* \"#utility.yul\":5117:5121   */\n      0xa0\n        /* \"#utility.yul\":5112:5115   */\n      dup6\n        /* \"#utility.yul\":5108:5122   */\n      add\n        /* \"#utility.yul\":5094:5106   */\n      dup3\n        /* \"#utility.yul\":5060:5123   */\n      tag_87\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4965:5133   */\n      pop\n        /* \"#utility.yul\":5227:5231   */\n      0xc0\n        /* \"#utility.yul\":5220:5225   */\n      dup3\n        /* \"#utility.yul\":5216:5232   */\n      add\n        /* \"#utility.yul\":5210:5233   */\n      mload\n        /* \"#utility.yul\":5246:5309   */\n      tag_161\n        /* \"#utility.yul\":5303:5307   */\n      0xc0\n        /* \"#utility.yul\":5298:5301   */\n      dup6\n        /* \"#utility.yul\":5294:5308   */\n      add\n        /* \"#utility.yul\":5280:5292   */\n      dup3\n        /* \"#utility.yul\":5246:5309   */\n      tag_87\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5143:5319   */\n      pop\n        /* \"#utility.yul\":5414:5418   */\n      0xe0\n        /* \"#utility.yul\":5407:5412   */\n      dup3\n        /* \"#utility.yul\":5403:5419   */\n      add\n        /* \"#utility.yul\":5397:5420   */\n      mload\n        /* \"#utility.yul\":5433:5496   */\n      tag_162\n        /* \"#utility.yul\":5490:5494   */\n      0xe0\n        /* \"#utility.yul\":5485:5488   */\n      dup6\n        /* \"#utility.yul\":5481:5495   */\n      add\n        /* \"#utility.yul\":5467:5479   */\n      dup3\n        /* \"#utility.yul\":5433:5496   */\n      tag_88\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5329:5506   */\n      pop\n        /* \"#utility.yul\":4034:5513   */\n      pop\n        /* \"#utility.yul\":3890:5513   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5519:5898   */\n    tag_35:\n        /* \"#utility.yul\":5690:5694   */\n      0x00\n        /* \"#utility.yul\":5728:5731   */\n      0x0100\n        /* \"#utility.yul\":5717:5726   */\n      dup3\n        /* \"#utility.yul\":5713:5732   */\n      add\n        /* \"#utility.yul\":5705:5732   */\n      swap1\n      pop\n        /* \"#utility.yul\":5742:5891   */\n      tag_164\n        /* \"#utility.yul\":5888:5889   */\n      0x00\n        /* \"#utility.yul\":5877:5886   */\n      dup4\n        /* \"#utility.yul\":5873:5890   */\n      add\n        /* \"#utility.yul\":5864:5870   */\n      dup5\n        /* \"#utility.yul\":5742:5891   */\n      tag_89\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5519:5898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5904:6047   */\n    tag_90:\n        /* \"#utility.yul\":5961:5966   */\n      0x00\n        /* \"#utility.yul\":5992:5998   */\n      dup2\n        /* \"#utility.yul\":5986:5999   */\n      mload\n        /* \"#utility.yul\":5977:5999   */\n      swap1\n      pop\n        /* \"#utility.yul\":6008:6041   */\n      tag_166\n        /* \"#utility.yul\":6035:6040   */\n      dup2\n        /* \"#utility.yul\":6008:6041   */\n      tag_82\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5904:6047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6053:6404   */\n    tag_39:\n        /* \"#utility.yul\":6123:6129   */\n      0x00\n        /* \"#utility.yul\":6172:6174   */\n      0x20\n        /* \"#utility.yul\":6160:6169   */\n      dup3\n        /* \"#utility.yul\":6151:6158   */\n      dup5\n        /* \"#utility.yul\":6147:6170   */\n      sub\n        /* \"#utility.yul\":6143:6175   */\n      slt\n        /* \"#utility.yul\":6140:6259   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":6178:6257   */\n      tag_169\n      tag_79\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6140:6259   */\n    tag_168:\n        /* \"#utility.yul\":6298:6299   */\n      0x00\n        /* \"#utility.yul\":6323:6387   */\n      tag_170\n        /* \"#utility.yul\":6379:6386   */\n      dup5\n        /* \"#utility.yul\":6370:6376   */\n      dup3\n        /* \"#utility.yul\":6359:6368   */\n      dup6\n        /* \"#utility.yul\":6355:6377   */\n      add\n        /* \"#utility.yul\":6323:6387   */\n      tag_90\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6313:6387   */\n      swap2\n      pop\n        /* \"#utility.yul\":6269:6397   */\n      pop\n        /* \"#utility.yul\":6053:6404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6410:6852   */\n    tag_42:\n        /* \"#utility.yul\":6559:6563   */\n      0x00\n        /* \"#utility.yul\":6597:6599   */\n      0x60\n        /* \"#utility.yul\":6586:6595   */\n      dup3\n        /* \"#utility.yul\":6582:6600   */\n      add\n        /* \"#utility.yul\":6574:6600   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6681   */\n      tag_172\n        /* \"#utility.yul\":6678:6679   */\n      0x00\n        /* \"#utility.yul\":6667:6676   */\n      dup4\n        /* \"#utility.yul\":6663:6680   */\n      add\n        /* \"#utility.yul\":6654:6660   */\n      dup7\n        /* \"#utility.yul\":6610:6681   */\n      tag_70\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6691:6763   */\n      tag_173\n        /* \"#utility.yul\":6759:6761   */\n      0x20\n        /* \"#utility.yul\":6748:6757   */\n      dup4\n        /* \"#utility.yul\":6744:6762   */\n      add\n        /* \"#utility.yul\":6735:6741   */\n      dup6\n        /* \"#utility.yul\":6691:6763   */\n      tag_70\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6773:6845   */\n      tag_174\n        /* \"#utility.yul\":6841:6843   */\n      0x40\n        /* \"#utility.yul\":6830:6839   */\n      dup4\n        /* \"#utility.yul\":6826:6844   */\n      add\n        /* \"#utility.yul\":6817:6823   */\n      dup5\n        /* \"#utility.yul\":6773:6845   */\n      tag_84\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6410:6852   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6858:6956   */\n    tag_91:\n        /* \"#utility.yul\":6909:6915   */\n      0x00\n        /* \"#utility.yul\":6943:6948   */\n      dup2\n        /* \"#utility.yul\":6937:6949   */\n      mload\n        /* \"#utility.yul\":6927:6949   */\n      swap1\n      pop\n        /* \"#utility.yul\":6858:6956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6962:7109   */\n    tag_92:\n        /* \"#utility.yul\":7063:7074   */\n      0x00\n        /* \"#utility.yul\":7100:7103   */\n      dup2\n        /* \"#utility.yul\":7085:7103   */\n      swap1\n      pop\n        /* \"#utility.yul\":6962:7109   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7115:7254   */\n    tag_93:\n        /* \"#utility.yul\":7204:7210   */\n      dup3\n        /* \"#utility.yul\":7199:7202   */\n      dup2\n        /* \"#utility.yul\":7194:7197   */\n      dup4\n        /* \"#utility.yul\":7188:7211   */\n      mcopy\n        /* \"#utility.yul\":7245:7246   */\n      0x00\n        /* \"#utility.yul\":7236:7242   */\n      dup4\n        /* \"#utility.yul\":7231:7234   */\n      dup4\n        /* \"#utility.yul\":7227:7243   */\n      add\n        /* \"#utility.yul\":7220:7247   */\n      mstore\n        /* \"#utility.yul\":7115:7254   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7260:7646   */\n    tag_94:\n        /* \"#utility.yul\":7364:7367   */\n      0x00\n        /* \"#utility.yul\":7392:7430   */\n      tag_179\n        /* \"#utility.yul\":7424:7429   */\n      dup3\n        /* \"#utility.yul\":7392:7430   */\n      tag_91\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7446:7534   */\n      tag_180\n        /* \"#utility.yul\":7527:7533   */\n      dup2\n        /* \"#utility.yul\":7522:7525   */\n      dup6\n        /* \"#utility.yul\":7446:7534   */\n      tag_92\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7439:7534   */\n      swap4\n      pop\n        /* \"#utility.yul\":7543:7608   */\n      tag_181\n        /* \"#utility.yul\":7601:7607   */\n      dup2\n        /* \"#utility.yul\":7596:7599   */\n      dup6\n        /* \"#utility.yul\":7589:7593   */\n      0x20\n        /* \"#utility.yul\":7582:7587   */\n      dup7\n        /* \"#utility.yul\":7578:7594   */\n      add\n        /* \"#utility.yul\":7543:7608   */\n      tag_93\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7633:7639   */\n      dup1\n        /* \"#utility.yul\":7628:7631   */\n      dup5\n        /* \"#utility.yul\":7624:7640   */\n      add\n        /* \"#utility.yul\":7617:7640   */\n      swap2\n      pop\n        /* \"#utility.yul\":7368:7646   */\n      pop\n        /* \"#utility.yul\":7260:7646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7652:7923   */\n    tag_44:\n        /* \"#utility.yul\":7782:7785   */\n      0x00\n        /* \"#utility.yul\":7804:7897   */\n      tag_183\n        /* \"#utility.yul\":7893:7896   */\n      dup3\n        /* \"#utility.yul\":7884:7890   */\n      dup5\n        /* \"#utility.yul\":7804:7897   */\n      tag_94\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7797:7897   */\n      swap2\n      pop\n        /* \"#utility.yul\":7914:7917   */\n      dup2\n        /* \"#utility.yul\":7907:7917   */\n      swap1\n      pop\n        /* \"#utility.yul\":7652:7923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7929:8019   */\n    tag_95:\n        /* \"#utility.yul\":7963:7970   */\n      0x00\n        /* \"#utility.yul\":8006:8011   */\n      dup2\n        /* \"#utility.yul\":7999:8012   */\n      iszero\n        /* \"#utility.yul\":7992:8013   */\n      iszero\n        /* \"#utility.yul\":7981:8013   */\n      swap1\n      pop\n        /* \"#utility.yul\":7929:8019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8025:8141   */\n    tag_96:\n        /* \"#utility.yul\":8095:8116   */\n      tag_186\n        /* \"#utility.yul\":8110:8115   */\n      dup2\n        /* \"#utility.yul\":8095:8116   */\n      tag_95\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8088:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8117   */\n      eq\n        /* \"#utility.yul\":8075:8135   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":8131:8132   */\n      0x00\n        /* \"#utility.yul\":8128:8129   */\n      dup1\n        /* \"#utility.yul\":8121:8133   */\n      revert\n        /* \"#utility.yul\":8075:8135   */\n    tag_187:\n        /* \"#utility.yul\":8025:8141   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8147:8284   */\n    tag_97:\n        /* \"#utility.yul\":8201:8206   */\n      0x00\n        /* \"#utility.yul\":8232:8238   */\n      dup2\n        /* \"#utility.yul\":8226:8239   */\n      mload\n        /* \"#utility.yul\":8217:8239   */\n      swap1\n      pop\n        /* \"#utility.yul\":8248:8278   */\n      tag_189\n        /* \"#utility.yul\":8272:8277   */\n      dup2\n        /* \"#utility.yul\":8248:8278   */\n      tag_96\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":8147:8284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8290:8635   */\n    tag_51:\n        /* \"#utility.yul\":8357:8363   */\n      0x00\n        /* \"#utility.yul\":8406:8408   */\n      0x20\n        /* \"#utility.yul\":8394:8403   */\n      dup3\n        /* \"#utility.yul\":8385:8392   */\n      dup5\n        /* \"#utility.yul\":8381:8404   */\n      sub\n        /* \"#utility.yul\":8377:8409   */\n      slt\n        /* \"#utility.yul\":8374:8493   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":8412:8491   */\n      tag_192\n      tag_79\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8374:8493   */\n    tag_191:\n        /* \"#utility.yul\":8532:8533   */\n      0x00\n        /* \"#utility.yul\":8557:8618   */\n      tag_193\n        /* \"#utility.yul\":8610:8617   */\n      dup5\n        /* \"#utility.yul\":8601:8607   */\n      dup3\n        /* \"#utility.yul\":8590:8599   */\n      dup6\n        /* \"#utility.yul\":8586:8608   */\n      add\n        /* \"#utility.yul\":8557:8618   */\n      tag_97\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":8547:8618   */\n      swap2\n      pop\n        /* \"#utility.yul\":8503:8628   */\n      pop\n        /* \"#utility.yul\":8290:8635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8641:8810   */\n    tag_98:\n        /* \"#utility.yul\":8725:8736   */\n      0x00\n        /* \"#utility.yul\":8759:8765   */\n      dup3\n        /* \"#utility.yul\":8754:8757   */\n      dup3\n        /* \"#utility.yul\":8747:8766   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x20\n        /* \"#utility.yul\":8794:8797   */\n      dup3\n        /* \"#utility.yul\":8790:8804   */\n      add\n        /* \"#utility.yul\":8775:8804   */\n      swap1\n      pop\n        /* \"#utility.yul\":8641:8810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8816:8969   */\n    tag_99:\n        /* \"#utility.yul\":8956:8961   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8944:8950   */\n      dup3\n        /* \"#utility.yul\":8940:8954   */\n      add\n        /* \"#utility.yul\":8933:8962   */\n      mstore\n        /* \"#utility.yul\":8816:8969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8975:9340   */\n    tag_100:\n        /* \"#utility.yul\":9117:9120   */\n      0x00\n        /* \"#utility.yul\":9138:9204   */\n      tag_197\n        /* \"#utility.yul\":9202:9203   */\n      0x03\n        /* \"#utility.yul\":9197:9200   */\n      dup4\n        /* \"#utility.yul\":9138:9204   */\n      tag_98\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9131:9204   */\n      swap2\n      pop\n        /* \"#utility.yul\":9213:9306   */\n      tag_198\n        /* \"#utility.yul\":9302:9305   */\n      dup3\n        /* \"#utility.yul\":9213:9306   */\n      tag_99\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":9331:9333   */\n      0x20\n        /* \"#utility.yul\":9326:9329   */\n      dup3\n        /* \"#utility.yul\":9322:9334   */\n      add\n        /* \"#utility.yul\":9315:9334   */\n      swap1\n      pop\n        /* \"#utility.yul\":8975:9340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9346:9765   */\n    tag_54:\n        /* \"#utility.yul\":9512:9516   */\n      0x00\n        /* \"#utility.yul\":9550:9552   */\n      0x20\n        /* \"#utility.yul\":9539:9548   */\n      dup3\n        /* \"#utility.yul\":9535:9553   */\n      add\n        /* \"#utility.yul\":9527:9553   */\n      swap1\n      pop\n        /* \"#utility.yul\":9599:9608   */\n      dup2\n        /* \"#utility.yul\":9593:9597   */\n      dup2\n        /* \"#utility.yul\":9589:9609   */\n      sub\n        /* \"#utility.yul\":9585:9586   */\n      0x00\n        /* \"#utility.yul\":9574:9583   */\n      dup4\n        /* \"#utility.yul\":9570:9587   */\n      add\n        /* \"#utility.yul\":9563:9610   */\n      mstore\n        /* \"#utility.yul\":9627:9758   */\n      tag_200\n        /* \"#utility.yul\":9753:9757   */\n      dup2\n        /* \"#utility.yul\":9627:9758   */\n      tag_100\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9619:9758   */\n      swap1\n      pop\n        /* \"#utility.yul\":9346:9765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9771:10103   */\n    tag_57:\n        /* \"#utility.yul\":9892:9896   */\n      0x00\n        /* \"#utility.yul\":9930:9932   */\n      0x40\n        /* \"#utility.yul\":9919:9928   */\n      dup3\n        /* \"#utility.yul\":9915:9933   */\n      add\n        /* \"#utility.yul\":9907:9933   */\n      swap1\n      pop\n        /* \"#utility.yul\":9943:10014   */\n      tag_202\n        /* \"#utility.yul\":10011:10012   */\n      0x00\n        /* \"#utility.yul\":10000:10009   */\n      dup4\n        /* \"#utility.yul\":9996:10013   */\n      add\n        /* \"#utility.yul\":9987:9993   */\n      dup6\n        /* \"#utility.yul\":9943:10014   */\n      tag_70\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":10024:10096   */\n      tag_203\n        /* \"#utility.yul\":10092:10094   */\n      0x20\n        /* \"#utility.yul\":10081:10090   */\n      dup4\n        /* \"#utility.yul\":10077:10095   */\n      add\n        /* \"#utility.yul\":10068:10074   */\n      dup5\n        /* \"#utility.yul\":10024:10096   */\n      tag_84\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9771:10103   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10109:10261   */\n    tag_101:\n        /* \"#utility.yul\":10249:10253   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10245:10246   */\n      0x00\n        /* \"#utility.yul\":10237:10243   */\n      dup3\n        /* \"#utility.yul\":10233:10247   */\n      add\n        /* \"#utility.yul\":10226:10254   */\n      mstore\n        /* \"#utility.yul\":10109:10261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10267:10632   */\n    tag_102:\n        /* \"#utility.yul\":10409:10412   */\n      0x00\n        /* \"#utility.yul\":10430:10496   */\n      tag_206\n        /* \"#utility.yul\":10494:10495   */\n      0x02\n        /* \"#utility.yul\":10489:10492   */\n      dup4\n        /* \"#utility.yul\":10430:10496   */\n      tag_98\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":10423:10496   */\n      swap2\n      pop\n        /* \"#utility.yul\":10505:10598   */\n      tag_207\n        /* \"#utility.yul\":10594:10597   */\n      dup3\n        /* \"#utility.yul\":10505:10598   */\n      tag_101\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":10623:10625   */\n      0x20\n        /* \"#utility.yul\":10618:10621   */\n      dup3\n        /* \"#utility.yul\":10614:10626   */\n      add\n        /* \"#utility.yul\":10607:10626   */\n      swap1\n      pop\n        /* \"#utility.yul\":10267:10632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10638:11057   */\n    tag_67:\n        /* \"#utility.yul\":10804:10808   */\n      0x00\n        /* \"#utility.yul\":10842:10844   */\n      0x20\n        /* \"#utility.yul\":10831:10840   */\n      dup3\n        /* \"#utility.yul\":10827:10845   */\n      add\n        /* \"#utility.yul\":10819:10845   */\n      swap1\n      pop\n        /* \"#utility.yul\":10891:10900   */\n      dup2\n        /* \"#utility.yul\":10885:10889   */\n      dup2\n        /* \"#utility.yul\":10881:10901   */\n      sub\n        /* \"#utility.yul\":10877:10878   */\n      0x00\n        /* \"#utility.yul\":10866:10875   */\n      dup4\n        /* \"#utility.yul\":10862:10879   */\n      add\n        /* \"#utility.yul\":10855:10902   */\n      mstore\n        /* \"#utility.yul\":10919:11050   */\n      tag_209\n        /* \"#utility.yul\":11045:11049   */\n      dup2\n        /* \"#utility.yul\":10919:11050   */\n      tag_102\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10911:11050   */\n      swap1\n      pop\n        /* \"#utility.yul\":10638:11057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220974b96ea8fb283d3a215fb54c45c2447171a0ebe2a4125580b67ef256260bc4964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_390": {
									"entryPoint": null,
									"id": 390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1434:5",
										"nodeType": "YulBlock",
										"src": "0:1434:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "632:51:5",
													"nodeType": "YulBlock",
													"src": "632:51:5",
													"statements": [
														{
															"nativeSrc": "642:35:5",
															"nodeType": "YulAssignment",
															"src": "642:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:5"
																},
																"nativeSrc": "653:24:5",
																"nodeType": "YulFunctionCall",
																"src": "653:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nativeSrc": "568:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:5",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:5",
														"nodeType": "YulTypedName",
														"src": "624:7:5",
														"type": ""
													}
												],
												"src": "568:115:5"
											},
											{
												"body": {
													"nativeSrc": "751:98:5",
													"nodeType": "YulBlock",
													"src": "751:98:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:5",
																"nodeType": "YulBlock",
																"src": "827:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:5",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:5"
																			},
																			"nativeSrc": "829:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:5"
																		},
																		"nativeSrc": "829:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nativeSrc": "781:36:5",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:5"
																				},
																				"nativeSrc": "781:43:5",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:5"
																		},
																		"nativeSrc": "771:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:5"
																},
																"nativeSrc": "764:62:5",
																"nodeType": "YulFunctionCall",
																"src": "764:62:5"
															},
															"nativeSrc": "761:82:5",
															"nodeType": "YulIf",
															"src": "761:82:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nativeSrc": "689:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:5",
														"nodeType": "YulTypedName",
														"src": "744:5:5",
														"type": ""
													}
												],
												"src": "689:160:5"
											},
											{
												"body": {
													"nativeSrc": "937:99:5",
													"nodeType": "YulBlock",
													"src": "937:99:5",
													"statements": [
														{
															"nativeSrc": "947:22:5",
															"nodeType": "YulAssignment",
															"src": "947:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:5"
																},
																"nativeSrc": "956:13:5",
																"nodeType": "YulFunctionCall",
																"src": "956:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nativeSrc": "978:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:5"
																},
																"nativeSrc": "978:52:5",
																"nodeType": "YulFunctionCall",
																"src": "978:52:5"
															},
															"nativeSrc": "978:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "855:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:5",
														"nodeType": "YulTypedName",
														"src": "923:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:5",
														"nodeType": "YulTypedName",
														"src": "931:5:5",
														"type": ""
													}
												],
												"src": "855:181:5"
											},
											{
												"body": {
													"nativeSrc": "1138:293:5",
													"nodeType": "YulBlock",
													"src": "1138:293:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1184:83:5",
																"nodeType": "YulBlock",
																"src": "1184:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1186:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:5"
																			},
																			"nativeSrc": "1186:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:5"
																		},
																		"nativeSrc": "1186:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1159:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1159:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1168:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1168:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1155:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:5"
																		},
																		"nativeSrc": "1155:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1151:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:5"
																},
																"nativeSrc": "1151:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1151:32:5"
															},
															"nativeSrc": "1148:119:5",
															"nodeType": "YulIf",
															"src": "1148:119:5"
														},
														{
															"nativeSrc": "1277:147:5",
															"nodeType": "YulBlock",
															"src": "1277:147:5",
															"statements": [
																{
																	"nativeSrc": "1292:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1306:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1296:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1321:93:5",
																	"nodeType": "YulAssignment",
																	"src": "1321:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1386:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1397:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1382:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:5"
																				},
																				"nativeSrc": "1382:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1406:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nativeSrc": "1331:50:5",
																			"nodeType": "YulIdentifier",
																			"src": "1331:50:5"
																		},
																		"nativeSrc": "1331:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1321:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "1042:389:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:5",
														"nodeType": "YulTypedName",
														"src": "1108:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1119:7:5",
														"nodeType": "YulTypedName",
														"src": "1119:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1131:6:5",
														"nodeType": "YulTypedName",
														"src": "1131:6:5",
														"type": ""
													}
												],
												"src": "1042:389:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610beb380380610beb833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f80fd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b608051610ac061012b5f395f81816101390152818161019601526102830152610ac05ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80636a5dae381461005957806372f5d98a14610077578063ab8feb0214610095578063c31c9c07146100b3578063eb90cec1146100d1575b5f80fd5b610061610101565b60405161006e9190610604565b60405180910390f35b61007f610119565b60405161008c919061063a565b60405180910390f35b61009d61011f565b6040516100aa9190610604565b60405180910390f35b6100bb610137565b6040516100c891906106ae565b60405180910390f35b6100eb60048036038101906100e691906106fe565b61015b565b6040516100f89190610738565b60405180910390f35b73ac51c04cb72a5d0f56d71baf3e2f2b28e642692281565b610bb881565b73221c91a7fdb68c855a8a52ca7f18f2dcedac8c2b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f61017c73ac51c04cb72a5d0f56d71baf3e2f2b28e6426922333085610324565b6101bb73ac51c04cb72a5d0f56d71baf3e2f2b28e64269227f000000000000000000000000000000000000000000000000000000000000000084610476565b5f805f60405180610100016040528073ac51c04cb72a5d0f56d71baf3e2f2b28e642692273ffffffffffffffffffffffffffffffffffffffff16815260200173221c91a7fdb68c855a8a52ca7f18f2dcedac8c2b73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102da919061082d565b6020604051808303815f875af11580156102f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031a919061085b565b9350505050919050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161035a93929190610886565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103c4919061090d565b5f604051808303815f865af19150503d805f81146103fd576040519150601f19603f3d011682016040523d82523d5f602084013e610402565b606091505b509150915081801561042f57505f8151148061042e57508080602001905181019061042d9190610958565b5b5b61046e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610465906109dd565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016104aa9291906109fb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610514919061090d565b5f604051808303815f865af19150503d805f811461054d576040519150601f19603f3d011682016040523d82523d5f602084013e610552565b606091505b509150915081801561057f57505f8151148061057e57508080602001905181019061057d9190610958565b5b5b6105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590610a6c565b60405180910390fd5b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105ee826105c5565b9050919050565b6105fe816105e4565b82525050565b5f6020820190506106175f8301846105f5565b92915050565b5f62ffffff82169050919050565b6106348161061d565b82525050565b5f60208201905061064d5f83018461062b565b92915050565b5f819050919050565b5f61067661067161066c846105c5565b610653565b6105c5565b9050919050565b5f6106878261065c565b9050919050565b5f6106988261067d565b9050919050565b6106a88161068e565b82525050565b5f6020820190506106c15f83018461069f565b92915050565b5f80fd5b5f819050919050565b6106dd816106cb565b81146106e7575f80fd5b50565b5f813590506106f8816106d4565b92915050565b5f60208284031215610713576107126106c7565b5b5f610720848285016106ea565b91505092915050565b610732816106cb565b82525050565b5f60208201905061074b5f830184610729565b92915050565b61075a816105e4565b82525050565b6107698161061d565b82525050565b610778816106cb565b82525050565b610787816105c5565b82525050565b61010082015f8201516107a25f850182610751565b5060208201516107b56020850182610751565b5060408201516107c86040850182610760565b5060608201516107db6060850182610751565b5060808201516107ee608085018261076f565b5060a082015161080160a085018261076f565b5060c082015161081460c085018261076f565b5060e082015161082760e085018261077e565b50505050565b5f610100820190506108415f83018461078d565b92915050565b5f81519050610855816106d4565b92915050565b5f602082840312156108705761086f6106c7565b5b5f61087d84828501610847565b91505092915050565b5f6060820190506108995f8301866105f5565b6108a660208301856105f5565b6108b36040830184610729565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6108e7826108bb565b6108f181856108c5565b93506109018185602086016108cf565b80840191505092915050565b5f61091882846108dd565b915081905092915050565b5f8115159050919050565b61093781610923565b8114610941575f80fd5b50565b5f815190506109528161092e565b92915050565b5f6020828403121561096d5761096c6106c7565b5b5f61097a84828501610944565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f6109c7600383610983565b91506109d282610993565b602082019050919050565b5f6020820190508181035f8301526109f4816109bb565b9050919050565b5f604082019050610a0e5f8301856105f5565b610a1b6020830184610729565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f610a56600283610983565b9150610a6182610a22565b602082019050919050565b5f6020820190508181035f830152610a8381610a4a565b905091905056fea2646970667358221220974b96ea8fb283d3a215fb54c45c2447171a0ebe2a4125580b67ef256260bc4964736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBEB CODESIZE SUB DUP1 PUSH2 0xBEB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAC0 PUSH2 0x12B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x139 ADD MSTORE DUP2 DUP2 PUSH2 0x196 ADD MSTORE PUSH2 0x283 ADD MSTORE PUSH2 0xAC0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A5DAE38 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x72F5D98A EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xAB8FEB02 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xEB90CEC1 EQ PUSH2 0xD1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 DUP2 JUMP JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0x221C91A7FDB68C855A8A52CA7F18F2DCEDAC8C2B DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x17C PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 CALLER ADDRESS DUP6 PUSH2 0x324 JUMP JUMPDEST PUSH2 0x1BB PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 PUSH32 0x0 DUP5 PUSH2 0x476 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x221C91A7FDB68C855A8A52CA7F18F2DCEDAC8C2B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x35A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x90D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x402 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x42F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x42E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x465 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x90D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x552 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x57F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x57E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5EE DUP3 PUSH2 0x5C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x617 PUSH0 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x634 DUP2 PUSH2 0x61D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x64D PUSH0 DUP4 ADD DUP5 PUSH2 0x62B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x676 PUSH2 0x671 PUSH2 0x66C DUP5 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x687 DUP3 PUSH2 0x65C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x698 DUP3 PUSH2 0x67D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP2 PUSH2 0x68E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x69F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DD DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP2 EQ PUSH2 0x6E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F8 DUP2 PUSH2 0x6D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x713 JUMPI PUSH2 0x712 PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x720 DUP5 DUP3 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74B PUSH0 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0x61D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x787 DUP2 PUSH2 0x5C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x7A2 PUSH0 DUP6 ADD DUP3 PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7B5 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7C8 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x760 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x7DB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7EE PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x76F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x801 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x76F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x814 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x76F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x827 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x77E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x841 PUSH0 DUP4 ADD DUP5 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x855 DUP2 PUSH2 0x6D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x87D DUP5 DUP3 DUP6 ADD PUSH2 0x847 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x899 PUSH0 DUP4 ADD DUP7 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x8A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x8B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E7 DUP3 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x8F1 DUP2 DUP6 PUSH2 0x8C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x901 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8CF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x918 DUP3 DUP5 PUSH2 0x8DD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x937 DUP2 PUSH2 0x923 JUMP JUMPDEST DUP2 EQ PUSH2 0x941 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x952 DUP2 PUSH2 0x92E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96D JUMPI PUSH2 0x96C PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x97A DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9C7 PUSH1 0x3 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D2 DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9F4 DUP2 PUSH2 0x9BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA0E PUSH0 DUP4 ADD DUP6 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0xA1B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA56 PUSH1 0x2 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP3 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA83 DUP2 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x4B SWAP7 0xEA DUP16 0xB2 DUP4 0xD3 LOG2 ISZERO 0xFB SLOAD 0xC4 TLOAD 0x24 SELFBALANCE OR BYTE 0xE 0xBE 0x2A COINBASE 0x25 PC SIGNEXTEND PUSH8 0xEF256260BC496473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "232:1613:4:-:0;;;504:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;564:11;551:24;;;;;;;;;;504:78;232:1613;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:389::-;1131:6;1180:2;1168:9;1159:7;1155:23;1151:32;1148:119;;;1186:79;;:::i;:::-;1148:119;1306:1;1331:83;1406:7;1397:6;1386:9;1382:22;1331:83;:::i;:::-;1321:93;;1277:147;1042:389;;;;:::o;232:1613:4:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TKN_373": {
									"entryPoint": 287,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VTRU_376": {
									"entryPoint": 257,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeTier_379": {
									"entryPoint": 281,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_335": {
									"entryPoint": 1142,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 804,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapRouter_370": {
									"entryPoint": 311,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapVTRUForTKN_456": {
									"entryPoint": 347,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2555,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11060:5",
										"nodeType": "YulBlock",
										"src": "0:11060:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "184:51:5",
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nativeSrc": "194:35:5",
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nativeSrc": "205:24:5",
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:5",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:5",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nativeSrc": "306:53:5",
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nativeSrc": "328:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nativeSrc": "316:37:5",
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nativeSrc": "316:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:5",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:5",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nativeSrc": "463:124:5",
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nativeSrc": "473:26:5",
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:5",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:18:5",
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:5",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nativeSrc": "562:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nativeSrc": "509:71:5",
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nativeSrc": "509:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:5",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:5",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:5",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											},
											{
												"body": {
													"nativeSrc": "637:47:5",
													"nodeType": "YulBlock",
													"src": "637:47:5",
													"statements": [
														{
															"nativeSrc": "647:31:5",
															"nodeType": "YulAssignment",
															"src": "647:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "662:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "662:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "669:8:5",
																		"nodeType": "YulLiteral",
																		"src": "669:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "658:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "658:3:5"
																},
																"nativeSrc": "658:20:5",
																"nodeType": "YulFunctionCall",
																"src": "658:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "647:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "647:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "593:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "619:5:5",
														"nodeType": "YulTypedName",
														"src": "619:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "629:7:5",
														"nodeType": "YulTypedName",
														"src": "629:7:5",
														"type": ""
													}
												],
												"src": "593:91:5"
											},
											{
												"body": {
													"nativeSrc": "753:52:5",
													"nodeType": "YulBlock",
													"src": "753:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "792:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "792:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "775:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "775:16:5"
																		},
																		"nativeSrc": "775:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "775:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "763:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:5"
																},
																"nativeSrc": "763:36:5",
																"nodeType": "YulFunctionCall",
																"src": "763:36:5"
															},
															"nativeSrc": "763:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "763:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "690:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "741:5:5",
														"nodeType": "YulTypedName",
														"src": "741:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "748:3:5",
														"nodeType": "YulTypedName",
														"src": "748:3:5",
														"type": ""
													}
												],
												"src": "690:115:5"
											},
											{
												"body": {
													"nativeSrc": "907:122:5",
													"nodeType": "YulBlock",
													"src": "907:122:5",
													"statements": [
														{
															"nativeSrc": "917:26:5",
															"nodeType": "YulAssignment",
															"src": "917:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "929:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "929:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "940:2:5",
																		"nodeType": "YulLiteral",
																		"src": "940:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "925:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "925:3:5"
																},
																"nativeSrc": "925:18:5",
																"nodeType": "YulFunctionCall",
																"src": "925:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "917:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "917:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "995:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "995:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1008:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1019:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1019:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1004:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:5"
																		},
																		"nativeSrc": "1004:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "953:41:5",
																	"nodeType": "YulIdentifier",
																	"src": "953:41:5"
																},
																"nativeSrc": "953:69:5",
																"nodeType": "YulFunctionCall",
																"src": "953:69:5"
															},
															"nativeSrc": "953:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "953:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "811:218:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "879:9:5",
														"nodeType": "YulTypedName",
														"src": "879:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "891:6:5",
														"nodeType": "YulTypedName",
														"src": "891:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "902:4:5",
														"nodeType": "YulTypedName",
														"src": "902:4:5",
														"type": ""
													}
												],
												"src": "811:218:5"
											},
											{
												"body": {
													"nativeSrc": "1067:28:5",
													"nodeType": "YulBlock",
													"src": "1067:28:5",
													"statements": [
														{
															"nativeSrc": "1077:12:5",
															"nodeType": "YulAssignment",
															"src": "1077:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1084:5:5",
																"nodeType": "YulIdentifier",
																"src": "1084:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1077:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1077:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1035:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1053:5:5",
														"nodeType": "YulTypedName",
														"src": "1053:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1063:3:5",
														"nodeType": "YulTypedName",
														"src": "1063:3:5",
														"type": ""
													}
												],
												"src": "1035:60:5"
											},
											{
												"body": {
													"nativeSrc": "1161:82:5",
													"nodeType": "YulBlock",
													"src": "1161:82:5",
													"statements": [
														{
															"nativeSrc": "1171:66:5",
															"nodeType": "YulAssignment",
															"src": "1171:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1229:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1229:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1211:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1211:17:5"
																				},
																				"nativeSrc": "1211:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1211:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1202:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "1202:8:5"
																		},
																		"nativeSrc": "1202:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1184:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1184:17:5"
																},
																"nativeSrc": "1184:53:5",
																"nodeType": "YulFunctionCall",
																"src": "1184:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1171:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1171:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1101:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1141:5:5",
														"nodeType": "YulTypedName",
														"src": "1141:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1151:9:5",
														"nodeType": "YulTypedName",
														"src": "1151:9:5",
														"type": ""
													}
												],
												"src": "1101:142:5"
											},
											{
												"body": {
													"nativeSrc": "1309:66:5",
													"nodeType": "YulBlock",
													"src": "1309:66:5",
													"statements": [
														{
															"nativeSrc": "1319:50:5",
															"nodeType": "YulAssignment",
															"src": "1319:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1363:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1363:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1332:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1332:30:5"
																},
																"nativeSrc": "1332:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1332:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1319:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1319:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1249:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1289:5:5",
														"nodeType": "YulTypedName",
														"src": "1289:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1299:9:5",
														"nodeType": "YulTypedName",
														"src": "1299:9:5",
														"type": ""
													}
												],
												"src": "1249:126:5"
											},
											{
												"body": {
													"nativeSrc": "1460:66:5",
													"nodeType": "YulBlock",
													"src": "1460:66:5",
													"statements": [
														{
															"nativeSrc": "1470:50:5",
															"nodeType": "YulAssignment",
															"src": "1470:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1483:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1483:30:5"
																},
																"nativeSrc": "1483:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1483:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1470:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1470:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "1381:145:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1440:5:5",
														"nodeType": "YulTypedName",
														"src": "1440:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1450:9:5",
														"nodeType": "YulTypedName",
														"src": "1450:9:5",
														"type": ""
													}
												],
												"src": "1381:145:5"
											},
											{
												"body": {
													"nativeSrc": "1616:85:5",
													"nodeType": "YulBlock",
													"src": "1616:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1633:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1633:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1688:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "1638:49:5",
																			"nodeType": "YulIdentifier",
																			"src": "1638:49:5"
																		},
																		"nativeSrc": "1638:56:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1638:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1626:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:5"
																},
																"nativeSrc": "1626:69:5",
																"nodeType": "YulFunctionCall",
																"src": "1626:69:5"
															},
															"nativeSrc": "1626:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "1626:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "1532:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1604:5:5",
														"nodeType": "YulTypedName",
														"src": "1604:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1611:3:5",
														"nodeType": "YulTypedName",
														"src": "1611:3:5",
														"type": ""
													}
												],
												"src": "1532:169:5"
											},
											{
												"body": {
													"nativeSrc": "1824:143:5",
													"nodeType": "YulBlock",
													"src": "1824:143:5",
													"statements": [
														{
															"nativeSrc": "1834:26:5",
															"nodeType": "YulAssignment",
															"src": "1834:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1846:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1846:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1857:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1842:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1842:3:5"
																},
																"nativeSrc": "1842:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1842:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1834:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1834:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1933:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1933:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1946:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1946:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1957:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1957:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1942:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:5"
																		},
																		"nativeSrc": "1942:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1942:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "1870:62:5",
																	"nodeType": "YulIdentifier",
																	"src": "1870:62:5"
																},
																"nativeSrc": "1870:90:5",
																"nodeType": "YulFunctionCall",
																"src": "1870:90:5"
															},
															"nativeSrc": "1870:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "1870:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "1707:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1796:9:5",
														"nodeType": "YulTypedName",
														"src": "1796:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1808:6:5",
														"nodeType": "YulTypedName",
														"src": "1808:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1819:4:5",
														"nodeType": "YulTypedName",
														"src": "1819:4:5",
														"type": ""
													}
												],
												"src": "1707:260:5"
											},
											{
												"body": {
													"nativeSrc": "2013:35:5",
													"nodeType": "YulBlock",
													"src": "2013:35:5",
													"statements": [
														{
															"nativeSrc": "2023:19:5",
															"nodeType": "YulAssignment",
															"src": "2023:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2039:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2033:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2033:5:5"
																},
																"nativeSrc": "2033:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2033:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2023:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1973:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2006:6:5",
														"nodeType": "YulTypedName",
														"src": "2006:6:5",
														"type": ""
													}
												],
												"src": "1973:75:5"
											},
											{
												"body": {
													"nativeSrc": "2143:28:5",
													"nodeType": "YulBlock",
													"src": "2143:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2160:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2160:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2163:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2163:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2153:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:5"
																},
																"nativeSrc": "2153:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2153:12:5"
															},
															"nativeSrc": "2153:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "2153:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2054:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "2054:117:5"
											},
											{
												"body": {
													"nativeSrc": "2266:28:5",
													"nodeType": "YulBlock",
													"src": "2266:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2283:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2283:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2286:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2276:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:5"
																},
																"nativeSrc": "2276:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2276:12:5"
															},
															"nativeSrc": "2276:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "2276:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2177:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "2177:117:5"
											},
											{
												"body": {
													"nativeSrc": "2345:32:5",
													"nodeType": "YulBlock",
													"src": "2345:32:5",
													"statements": [
														{
															"nativeSrc": "2355:16:5",
															"nodeType": "YulAssignment",
															"src": "2355:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2366:5:5",
																"nodeType": "YulIdentifier",
																"src": "2366:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2355:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2355:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2300:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2327:5:5",
														"nodeType": "YulTypedName",
														"src": "2327:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2337:7:5",
														"nodeType": "YulTypedName",
														"src": "2337:7:5",
														"type": ""
													}
												],
												"src": "2300:77:5"
											},
											{
												"body": {
													"nativeSrc": "2426:79:5",
													"nodeType": "YulBlock",
													"src": "2426:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2483:16:5",
																"nodeType": "YulBlock",
																"src": "2483:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2492:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2492:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2495:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2495:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2485:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2485:6:5"
																			},
																			"nativeSrc": "2485:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2485:12:5"
																		},
																		"nativeSrc": "2485:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2485:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2449:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2449:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2474:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2456:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2456:17:5"
																				},
																				"nativeSrc": "2456:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2456:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2446:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2446:2:5"
																		},
																		"nativeSrc": "2446:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2446:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2439:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:5"
																},
																"nativeSrc": "2439:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2439:43:5"
															},
															"nativeSrc": "2436:63:5",
															"nodeType": "YulIf",
															"src": "2436:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2383:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2419:5:5",
														"nodeType": "YulTypedName",
														"src": "2419:5:5",
														"type": ""
													}
												],
												"src": "2383:122:5"
											},
											{
												"body": {
													"nativeSrc": "2563:87:5",
													"nodeType": "YulBlock",
													"src": "2563:87:5",
													"statements": [
														{
															"nativeSrc": "2573:29:5",
															"nodeType": "YulAssignment",
															"src": "2573:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2595:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2595:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2582:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2582:12:5"
																},
																"nativeSrc": "2582:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2582:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2573:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2573:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2638:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2638:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2611:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2611:26:5"
																},
																"nativeSrc": "2611:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2611:33:5"
															},
															"nativeSrc": "2611:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2611:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2511:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2541:6:5",
														"nodeType": "YulTypedName",
														"src": "2541:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2549:3:5",
														"nodeType": "YulTypedName",
														"src": "2549:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2557:5:5",
														"nodeType": "YulTypedName",
														"src": "2557:5:5",
														"type": ""
													}
												],
												"src": "2511:139:5"
											},
											{
												"body": {
													"nativeSrc": "2722:263:5",
													"nodeType": "YulBlock",
													"src": "2722:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2768:83:5",
																"nodeType": "YulBlock",
																"src": "2768:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2770:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2770:77:5"
																			},
																			"nativeSrc": "2770:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2770:79:5"
																		},
																		"nativeSrc": "2770:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2770:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2743:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2743:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2752:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2752:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2739:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:5"
																		},
																		"nativeSrc": "2739:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2764:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2764:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2735:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:5"
																},
																"nativeSrc": "2735:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2735:32:5"
															},
															"nativeSrc": "2732:119:5",
															"nodeType": "YulIf",
															"src": "2732:119:5"
														},
														{
															"nativeSrc": "2861:117:5",
															"nodeType": "YulBlock",
															"src": "2861:117:5",
															"statements": [
																{
																	"nativeSrc": "2876:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2876:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2890:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2890:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2880:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2880:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2905:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2905:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2940:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2940:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2951:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2951:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2936:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2936:3:5"
																				},
																				"nativeSrc": "2936:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2936:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2960:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2960:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2915:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2915:20:5"
																		},
																		"nativeSrc": "2915:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2915:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2905:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2905:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2656:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2692:9:5",
														"nodeType": "YulTypedName",
														"src": "2692:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2703:7:5",
														"nodeType": "YulTypedName",
														"src": "2703:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2715:6:5",
														"nodeType": "YulTypedName",
														"src": "2715:6:5",
														"type": ""
													}
												],
												"src": "2656:329:5"
											},
											{
												"body": {
													"nativeSrc": "3056:53:5",
													"nodeType": "YulBlock",
													"src": "3056:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3073:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3073:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3078:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3078:17:5"
																		},
																		"nativeSrc": "3078:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3066:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3066:6:5"
																},
																"nativeSrc": "3066:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3066:37:5"
															},
															"nativeSrc": "3066:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3066:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2991:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3044:5:5",
														"nodeType": "YulTypedName",
														"src": "3044:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3051:3:5",
														"nodeType": "YulTypedName",
														"src": "3051:3:5",
														"type": ""
													}
												],
												"src": "2991:118:5"
											},
											{
												"body": {
													"nativeSrc": "3213:124:5",
													"nodeType": "YulBlock",
													"src": "3213:124:5",
													"statements": [
														{
															"nativeSrc": "3223:26:5",
															"nodeType": "YulAssignment",
															"src": "3223:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3235:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3235:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3246:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3246:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3231:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3231:3:5"
																},
																"nativeSrc": "3231:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3231:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3223:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3223:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3303:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3303:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3316:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3316:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3327:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3327:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3312:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:5"
																		},
																		"nativeSrc": "3312:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3259:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3259:43:5"
																},
																"nativeSrc": "3259:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3259:71:5"
															},
															"nativeSrc": "3259:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3259:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3115:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3185:9:5",
														"nodeType": "YulTypedName",
														"src": "3185:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3197:6:5",
														"nodeType": "YulTypedName",
														"src": "3197:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3208:4:5",
														"nodeType": "YulTypedName",
														"src": "3208:4:5",
														"type": ""
													}
												],
												"src": "3115:222:5"
											},
											{
												"body": {
													"nativeSrc": "3398:53:5",
													"nodeType": "YulBlock",
													"src": "3398:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3415:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3415:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3438:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3438:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3420:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3420:17:5"
																		},
																		"nativeSrc": "3420:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3420:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3408:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:5"
																},
																"nativeSrc": "3408:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3408:37:5"
															},
															"nativeSrc": "3408:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3408:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "3343:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3386:5:5",
														"nodeType": "YulTypedName",
														"src": "3386:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3393:3:5",
														"nodeType": "YulTypedName",
														"src": "3393:3:5",
														"type": ""
													}
												],
												"src": "3343:108:5"
											},
											{
												"body": {
													"nativeSrc": "3510:52:5",
													"nodeType": "YulBlock",
													"src": "3510:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3527:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3527:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3549:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3549:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "3532:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "3532:16:5"
																		},
																		"nativeSrc": "3532:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3532:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:5"
																},
																"nativeSrc": "3520:36:5",
																"nodeType": "YulFunctionCall",
																"src": "3520:36:5"
															},
															"nativeSrc": "3520:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "3520:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "3457:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3498:5:5",
														"nodeType": "YulTypedName",
														"src": "3498:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3505:3:5",
														"nodeType": "YulTypedName",
														"src": "3505:3:5",
														"type": ""
													}
												],
												"src": "3457:105:5"
											},
											{
												"body": {
													"nativeSrc": "3623:53:5",
													"nodeType": "YulBlock",
													"src": "3623:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3640:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3640:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3663:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3663:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3645:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3645:17:5"
																		},
																		"nativeSrc": "3645:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3645:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3633:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3633:6:5"
																},
																"nativeSrc": "3633:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3633:37:5"
															},
															"nativeSrc": "3633:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3633:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3568:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3611:5:5",
														"nodeType": "YulTypedName",
														"src": "3611:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3618:3:5",
														"nodeType": "YulTypedName",
														"src": "3618:3:5",
														"type": ""
													}
												],
												"src": "3568:108:5"
											},
											{
												"body": {
													"nativeSrc": "3737:53:5",
													"nodeType": "YulBlock",
													"src": "3737:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3754:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3754:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3777:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3777:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "3759:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3759:17:5"
																		},
																		"nativeSrc": "3759:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3747:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3747:6:5"
																},
																"nativeSrc": "3747:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3747:37:5"
															},
															"nativeSrc": "3747:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3747:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "3682:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3725:5:5",
														"nodeType": "YulTypedName",
														"src": "3725:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3732:3:5",
														"nodeType": "YulTypedName",
														"src": "3732:3:5",
														"type": ""
													}
												],
												"src": "3682:108:5"
											},
											{
												"body": {
													"nativeSrc": "4034:1479:5",
													"nodeType": "YulBlock",
													"src": "4034:1479:5",
													"statements": [
														{
															"nativeSrc": "4044:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4044:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4060:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4060:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4065:6:5",
																		"nodeType": "YulLiteral",
																		"src": "4065:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4056:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:5"
																},
																"nativeSrc": "4056:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4056:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4048:4:5",
																	"nodeType": "YulTypedName",
																	"src": "4048:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4082:167:5",
															"nodeType": "YulBlock",
															"src": "4082:167:5",
															"statements": [
																{
																	"nativeSrc": "4120:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4120:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4150:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4150:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4157:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4157:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4146:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4146:3:5"
																				},
																				"nativeSrc": "4146:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4146:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4140:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4140:5:5"
																		},
																		"nativeSrc": "4140:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4140:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4124:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4124:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4210:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4210:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4228:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4228:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4233:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4233:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4224:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4224:3:5"
																				},
																				"nativeSrc": "4224:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4224:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4176:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4176:33:5"
																		},
																		"nativeSrc": "4176:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:63:5"
																	},
																	"nativeSrc": "4176:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4176:63:5"
																}
															]
														},
														{
															"nativeSrc": "4259:168:5",
															"nodeType": "YulBlock",
															"src": "4259:168:5",
															"statements": [
																{
																	"nativeSrc": "4298:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4298:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4328:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4328:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4335:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4335:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4324:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4324:3:5"
																				},
																				"nativeSrc": "4324:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4324:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4318:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4318:5:5"
																		},
																		"nativeSrc": "4318:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4318:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4302:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4302:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4388:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4388:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4406:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4406:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4411:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4411:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4402:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4402:3:5"
																				},
																				"nativeSrc": "4402:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4402:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4354:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4354:33:5"
																		},
																		"nativeSrc": "4354:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4354:63:5"
																	},
																	"nativeSrc": "4354:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4354:63:5"
																}
															]
														},
														{
															"nativeSrc": "4437:161:5",
															"nodeType": "YulBlock",
															"src": "4437:161:5",
															"statements": [
																{
																	"nativeSrc": "4471:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4471:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4501:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4501:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4508:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4508:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4497:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4497:3:5"
																				},
																				"nativeSrc": "4497:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4497:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4491:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4491:5:5"
																		},
																		"nativeSrc": "4491:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4475:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4475:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4559:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4559:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4577:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4577:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4582:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4582:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4573:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4573:3:5"
																				},
																				"nativeSrc": "4573:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4573:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "4527:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4527:31:5"
																		},
																		"nativeSrc": "4527:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:61:5"
																	},
																	"nativeSrc": "4527:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4527:61:5"
																}
															]
														},
														{
															"nativeSrc": "4608:169:5",
															"nodeType": "YulBlock",
															"src": "4608:169:5",
															"statements": [
																{
																	"nativeSrc": "4648:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4648:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4678:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4678:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4685:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4685:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4674:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4674:3:5"
																				},
																				"nativeSrc": "4674:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4674:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4668:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4668:5:5"
																		},
																		"nativeSrc": "4668:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4668:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4652:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4652:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4738:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4738:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4756:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:5"
																				},
																				"nativeSrc": "4752:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4704:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4704:33:5"
																		},
																		"nativeSrc": "4704:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4704:63:5"
																	},
																	"nativeSrc": "4704:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4704:63:5"
																}
															]
														},
														{
															"nativeSrc": "4787:168:5",
															"nodeType": "YulBlock",
															"src": "4787:168:5",
															"statements": [
																{
																	"nativeSrc": "4826:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4826:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4856:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4856:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4863:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4863:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4852:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4852:3:5"
																				},
																				"nativeSrc": "4852:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4852:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4846:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4846:5:5"
																		},
																		"nativeSrc": "4846:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4846:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4830:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4830:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4916:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4916:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4934:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4934:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4939:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4939:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4930:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4930:3:5"
																				},
																				"nativeSrc": "4930:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4930:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4882:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4882:33:5"
																		},
																		"nativeSrc": "4882:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4882:63:5"
																	},
																	"nativeSrc": "4882:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4882:63:5"
																}
															]
														},
														{
															"nativeSrc": "4965:168:5",
															"nodeType": "YulBlock",
															"src": "4965:168:5",
															"statements": [
																{
																	"nativeSrc": "5004:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5004:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5034:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5034:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5041:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5041:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5030:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5030:3:5"
																				},
																				"nativeSrc": "5030:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5030:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5024:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5024:5:5"
																		},
																		"nativeSrc": "5024:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5024:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5008:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5008:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5094:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5094:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5112:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5112:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5117:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5117:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5108:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:5"
																				},
																				"nativeSrc": "5108:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5060:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5060:33:5"
																		},
																		"nativeSrc": "5060:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5060:63:5"
																	},
																	"nativeSrc": "5060:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5060:63:5"
																}
															]
														},
														{
															"nativeSrc": "5143:176:5",
															"nodeType": "YulBlock",
															"src": "5143:176:5",
															"statements": [
																{
																	"nativeSrc": "5190:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5190:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5220:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5220:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5227:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5227:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5216:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5216:3:5"
																				},
																				"nativeSrc": "5216:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5216:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5210:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5210:5:5"
																		},
																		"nativeSrc": "5210:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5210:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5194:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5194:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5280:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5280:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5298:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5298:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5303:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5303:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5294:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5294:3:5"
																				},
																				"nativeSrc": "5294:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5294:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5246:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5246:33:5"
																		},
																		"nativeSrc": "5246:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5246:63:5"
																	},
																	"nativeSrc": "5246:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5246:63:5"
																}
															]
														},
														{
															"nativeSrc": "5329:177:5",
															"nodeType": "YulBlock",
															"src": "5329:177:5",
															"statements": [
																{
																	"nativeSrc": "5377:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5377:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5407:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5407:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5414:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5414:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5403:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5403:3:5"
																				},
																				"nativeSrc": "5403:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5403:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5397:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5397:5:5"
																		},
																		"nativeSrc": "5397:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5381:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5381:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5467:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5467:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5485:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5485:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5490:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5490:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5481:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5481:3:5"
																				},
																				"nativeSrc": "5481:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5481:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "5433:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5433:33:5"
																		},
																		"nativeSrc": "5433:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5433:63:5"
																	},
																	"nativeSrc": "5433:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5433:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "3890:1623:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4021:5:5",
														"nodeType": "YulTypedName",
														"src": "4021:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4028:3:5",
														"nodeType": "YulTypedName",
														"src": "4028:3:5",
														"type": ""
													}
												],
												"src": "3890:1623:5"
											},
											{
												"body": {
													"nativeSrc": "5695:203:5",
													"nodeType": "YulBlock",
													"src": "5695:203:5",
													"statements": [
														{
															"nativeSrc": "5705:27:5",
															"nodeType": "YulAssignment",
															"src": "5705:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5717:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5717:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5728:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5728:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5713:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5713:3:5"
																},
																"nativeSrc": "5713:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5713:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5705:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5705:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5864:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5864:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5877:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5877:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5888:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5888:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5873:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5873:3:5"
																		},
																		"nativeSrc": "5873:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5873:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "5742:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "5742:121:5"
																},
																"nativeSrc": "5742:149:5",
																"nodeType": "YulFunctionCall",
																"src": "5742:149:5"
															},
															"nativeSrc": "5742:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "5742:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "5519:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5667:9:5",
														"nodeType": "YulTypedName",
														"src": "5667:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5679:6:5",
														"nodeType": "YulTypedName",
														"src": "5679:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5690:4:5",
														"nodeType": "YulTypedName",
														"src": "5690:4:5",
														"type": ""
													}
												],
												"src": "5519:379:5"
											},
											{
												"body": {
													"nativeSrc": "5967:80:5",
													"nodeType": "YulBlock",
													"src": "5967:80:5",
													"statements": [
														{
															"nativeSrc": "5977:22:5",
															"nodeType": "YulAssignment",
															"src": "5977:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5992:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5992:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5986:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5986:5:5"
																},
																"nativeSrc": "5986:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5986:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5977:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5977:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6035:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6035:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6008:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "6008:26:5"
																},
																"nativeSrc": "6008:33:5",
																"nodeType": "YulFunctionCall",
																"src": "6008:33:5"
															},
															"nativeSrc": "6008:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "6008:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5904:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5945:6:5",
														"nodeType": "YulTypedName",
														"src": "5945:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5953:3:5",
														"nodeType": "YulTypedName",
														"src": "5953:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5961:5:5",
														"nodeType": "YulTypedName",
														"src": "5961:5:5",
														"type": ""
													}
												],
												"src": "5904:143:5"
											},
											{
												"body": {
													"nativeSrc": "6130:274:5",
													"nodeType": "YulBlock",
													"src": "6130:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6176:83:5",
																"nodeType": "YulBlock",
																"src": "6176:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6178:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6178:77:5"
																			},
																			"nativeSrc": "6178:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6178:79:5"
																		},
																		"nativeSrc": "6178:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6178:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6151:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6151:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6160:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6160:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6147:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6147:3:5"
																		},
																		"nativeSrc": "6147:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6147:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6172:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6172:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6143:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:5"
																},
																"nativeSrc": "6143:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6143:32:5"
															},
															"nativeSrc": "6140:119:5",
															"nodeType": "YulIf",
															"src": "6140:119:5"
														},
														{
															"nativeSrc": "6269:128:5",
															"nodeType": "YulBlock",
															"src": "6269:128:5",
															"statements": [
																{
																	"nativeSrc": "6284:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6284:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6298:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6298:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6288:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6288:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6313:74:5",
																	"nodeType": "YulAssignment",
																	"src": "6313:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6359:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6359:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6370:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6370:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6355:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6355:3:5"
																				},
																				"nativeSrc": "6355:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6355:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6379:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6379:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6323:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "6323:31:5"
																		},
																		"nativeSrc": "6323:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6313:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6313:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6053:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6100:9:5",
														"nodeType": "YulTypedName",
														"src": "6100:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6111:7:5",
														"nodeType": "YulTypedName",
														"src": "6111:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6123:6:5",
														"nodeType": "YulTypedName",
														"src": "6123:6:5",
														"type": ""
													}
												],
												"src": "6053:351:5"
											},
											{
												"body": {
													"nativeSrc": "6564:288:5",
													"nodeType": "YulBlock",
													"src": "6564:288:5",
													"statements": [
														{
															"nativeSrc": "6574:26:5",
															"nodeType": "YulAssignment",
															"src": "6574:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6586:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6586:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6597:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6597:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6582:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6582:3:5"
																},
																"nativeSrc": "6582:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6582:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6574:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6574:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6654:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6667:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6667:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6678:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6678:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6663:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6663:3:5"
																		},
																		"nativeSrc": "6663:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6663:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6610:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6610:43:5"
																},
																"nativeSrc": "6610:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6610:71:5"
															},
															"nativeSrc": "6610:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6610:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6735:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6735:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6748:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6748:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6759:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6759:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6744:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:5"
																		},
																		"nativeSrc": "6744:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6744:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6691:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6691:43:5"
																},
																"nativeSrc": "6691:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6691:72:5"
															},
															"nativeSrc": "6691:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6691:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6817:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6817:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6830:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6830:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6841:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6841:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6826:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6826:3:5"
																		},
																		"nativeSrc": "6826:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6826:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6773:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6773:43:5"
																},
																"nativeSrc": "6773:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6773:72:5"
															},
															"nativeSrc": "6773:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6773:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6410:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6520:9:5",
														"nodeType": "YulTypedName",
														"src": "6520:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6532:6:5",
														"nodeType": "YulTypedName",
														"src": "6532:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6540:6:5",
														"nodeType": "YulTypedName",
														"src": "6540:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6548:6:5",
														"nodeType": "YulTypedName",
														"src": "6548:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6559:4:5",
														"nodeType": "YulTypedName",
														"src": "6559:4:5",
														"type": ""
													}
												],
												"src": "6410:442:5"
											},
											{
												"body": {
													"nativeSrc": "6916:40:5",
													"nodeType": "YulBlock",
													"src": "6916:40:5",
													"statements": [
														{
															"nativeSrc": "6927:22:5",
															"nodeType": "YulAssignment",
															"src": "6927:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6943:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6943:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6937:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6937:5:5"
																},
																"nativeSrc": "6937:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6937:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6927:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "6858:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6899:5:5",
														"nodeType": "YulTypedName",
														"src": "6899:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6909:6:5",
														"nodeType": "YulTypedName",
														"src": "6909:6:5",
														"type": ""
													}
												],
												"src": "6858:98:5"
											},
											{
												"body": {
													"nativeSrc": "7075:34:5",
													"nodeType": "YulBlock",
													"src": "7075:34:5",
													"statements": [
														{
															"nativeSrc": "7085:18:5",
															"nodeType": "YulAssignment",
															"src": "7085:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7100:3:5",
																"nodeType": "YulIdentifier",
																"src": "7100:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7085:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "7085:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6962:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7047:3:5",
														"nodeType": "YulTypedName",
														"src": "7047:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7052:6:5",
														"nodeType": "YulTypedName",
														"src": "7052:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7063:11:5",
														"nodeType": "YulTypedName",
														"src": "7063:11:5",
														"type": ""
													}
												],
												"src": "6962:147:5"
											},
											{
												"body": {
													"nativeSrc": "7177:77:5",
													"nodeType": "YulBlock",
													"src": "7177:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7194:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7194:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7199:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7204:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7188:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7188:5:5"
																},
																"nativeSrc": "7188:23:5",
																"nodeType": "YulFunctionCall",
																"src": "7188:23:5"
															},
															"nativeSrc": "7188:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "7188:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7231:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "7231:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7236:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7236:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7227:3:5"
																		},
																		"nativeSrc": "7227:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7227:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7245:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7220:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7220:6:5"
																},
																"nativeSrc": "7220:27:5",
																"nodeType": "YulFunctionCall",
																"src": "7220:27:5"
															},
															"nativeSrc": "7220:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "7220:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7115:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7159:3:5",
														"nodeType": "YulTypedName",
														"src": "7159:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7164:3:5",
														"nodeType": "YulTypedName",
														"src": "7164:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7169:6:5",
														"nodeType": "YulTypedName",
														"src": "7169:6:5",
														"type": ""
													}
												],
												"src": "7115:139:5"
											},
											{
												"body": {
													"nativeSrc": "7368:278:5",
													"nodeType": "YulBlock",
													"src": "7368:278:5",
													"statements": [
														{
															"nativeSrc": "7378:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7424:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7424:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "7392:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "7392:31:5"
																},
																"nativeSrc": "7392:38:5",
																"nodeType": "YulFunctionCall",
																"src": "7392:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7382:6:5",
																	"nodeType": "YulTypedName",
																	"src": "7382:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7439:95:5",
															"nodeType": "YulAssignment",
															"src": "7439:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7522:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7522:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7527:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7527:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7446:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "7446:75:5"
																},
																"nativeSrc": "7446:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7446:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7439:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7439:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7582:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7582:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7589:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7589:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7578:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7578:3:5"
																		},
																		"nativeSrc": "7578:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7578:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7596:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7596:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7601:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7601:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7543:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "7543:34:5"
																},
																"nativeSrc": "7543:65:5",
																"nodeType": "YulFunctionCall",
																"src": "7543:65:5"
															},
															"nativeSrc": "7543:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "7543:65:5"
														},
														{
															"nativeSrc": "7617:23:5",
															"nodeType": "YulAssignment",
															"src": "7617:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7628:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7628:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7633:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7633:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7624:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7624:3:5"
																},
																"nativeSrc": "7624:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7624:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7617:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7617:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7260:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7349:5:5",
														"nodeType": "YulTypedName",
														"src": "7349:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7356:3:5",
														"nodeType": "YulTypedName",
														"src": "7356:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7364:3:5",
														"nodeType": "YulTypedName",
														"src": "7364:3:5",
														"type": ""
													}
												],
												"src": "7260:386:5"
											},
											{
												"body": {
													"nativeSrc": "7786:137:5",
													"nodeType": "YulBlock",
													"src": "7786:137:5",
													"statements": [
														{
															"nativeSrc": "7797:100:5",
															"nodeType": "YulAssignment",
															"src": "7797:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7884:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7893:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7893:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7804:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "7804:79:5"
																},
																"nativeSrc": "7804:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7804:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7797:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7797:3:5"
																}
															]
														},
														{
															"nativeSrc": "7907:10:5",
															"nodeType": "YulAssignment",
															"src": "7907:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7914:3:5",
																"nodeType": "YulIdentifier",
																"src": "7914:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7907:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7907:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7652:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7765:3:5",
														"nodeType": "YulTypedName",
														"src": "7765:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7771:6:5",
														"nodeType": "YulTypedName",
														"src": "7771:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7782:3:5",
														"nodeType": "YulTypedName",
														"src": "7782:3:5",
														"type": ""
													}
												],
												"src": "7652:271:5"
											},
											{
												"body": {
													"nativeSrc": "7971:48:5",
													"nodeType": "YulBlock",
													"src": "7971:48:5",
													"statements": [
														{
															"nativeSrc": "7981:32:5",
															"nodeType": "YulAssignment",
															"src": "7981:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8006:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8006:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7999:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7999:6:5"
																		},
																		"nativeSrc": "7999:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7999:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7992:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:5"
																},
																"nativeSrc": "7992:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7992:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7981:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7981:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7929:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7953:5:5",
														"nodeType": "YulTypedName",
														"src": "7953:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7963:7:5",
														"nodeType": "YulTypedName",
														"src": "7963:7:5",
														"type": ""
													}
												],
												"src": "7929:90:5"
											},
											{
												"body": {
													"nativeSrc": "8065:76:5",
													"nodeType": "YulBlock",
													"src": "8065:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8119:16:5",
																"nodeType": "YulBlock",
																"src": "8119:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8128:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8128:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8131:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8131:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8121:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8121:6:5"
																			},
																			"nativeSrc": "8121:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8121:12:5"
																		},
																		"nativeSrc": "8121:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8121:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8088:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8088:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8110:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8110:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8095:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "8095:14:5"
																				},
																				"nativeSrc": "8095:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8095:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8085:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8085:2:5"
																		},
																		"nativeSrc": "8085:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8085:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8078:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8078:6:5"
																},
																"nativeSrc": "8078:40:5",
																"nodeType": "YulFunctionCall",
																"src": "8078:40:5"
															},
															"nativeSrc": "8075:60:5",
															"nodeType": "YulIf",
															"src": "8075:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8025:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8058:5:5",
														"nodeType": "YulTypedName",
														"src": "8058:5:5",
														"type": ""
													}
												],
												"src": "8025:116:5"
											},
											{
												"body": {
													"nativeSrc": "8207:77:5",
													"nodeType": "YulBlock",
													"src": "8207:77:5",
													"statements": [
														{
															"nativeSrc": "8217:22:5",
															"nodeType": "YulAssignment",
															"src": "8217:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8232:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8232:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:5"
																},
																"nativeSrc": "8226:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8226:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8217:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8217:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8272:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8272:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8248:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "8248:23:5"
																},
																"nativeSrc": "8248:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8248:30:5"
															},
															"nativeSrc": "8248:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8248:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8147:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8185:6:5",
														"nodeType": "YulTypedName",
														"src": "8185:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8193:3:5",
														"nodeType": "YulTypedName",
														"src": "8193:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8201:5:5",
														"nodeType": "YulTypedName",
														"src": "8201:5:5",
														"type": ""
													}
												],
												"src": "8147:137:5"
											},
											{
												"body": {
													"nativeSrc": "8364:271:5",
													"nodeType": "YulBlock",
													"src": "8364:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8410:83:5",
																"nodeType": "YulBlock",
																"src": "8410:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8412:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8412:77:5"
																			},
																			"nativeSrc": "8412:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8412:79:5"
																		},
																		"nativeSrc": "8412:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8412:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8385:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8385:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8394:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8394:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8381:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8381:3:5"
																		},
																		"nativeSrc": "8381:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8381:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8406:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8406:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8377:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8377:3:5"
																},
																"nativeSrc": "8377:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8377:32:5"
															},
															"nativeSrc": "8374:119:5",
															"nodeType": "YulIf",
															"src": "8374:119:5"
														},
														{
															"nativeSrc": "8503:125:5",
															"nodeType": "YulBlock",
															"src": "8503:125:5",
															"statements": [
																{
																	"nativeSrc": "8518:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8518:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8532:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8532:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8522:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8522:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8547:71:5",
																	"nodeType": "YulAssignment",
																	"src": "8547:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8590:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8590:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8601:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8601:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8586:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8586:3:5"
																				},
																				"nativeSrc": "8586:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8586:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8610:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8610:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8557:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "8557:28:5"
																		},
																		"nativeSrc": "8557:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8557:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8547:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8547:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8290:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8334:9:5",
														"nodeType": "YulTypedName",
														"src": "8334:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8345:7:5",
														"nodeType": "YulTypedName",
														"src": "8345:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8357:6:5",
														"nodeType": "YulTypedName",
														"src": "8357:6:5",
														"type": ""
													}
												],
												"src": "8290:345:5"
											},
											{
												"body": {
													"nativeSrc": "8737:73:5",
													"nodeType": "YulBlock",
													"src": "8737:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8754:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8754:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8759:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8759:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8747:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8747:6:5"
																},
																"nativeSrc": "8747:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8747:19:5"
															},
															"nativeSrc": "8747:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "8747:19:5"
														},
														{
															"nativeSrc": "8775:29:5",
															"nodeType": "YulAssignment",
															"src": "8775:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8794:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8794:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8799:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8799:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8790:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8790:3:5"
																},
																"nativeSrc": "8790:14:5",
																"nodeType": "YulFunctionCall",
																"src": "8790:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8775:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8775:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8641:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8709:3:5",
														"nodeType": "YulTypedName",
														"src": "8709:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8714:6:5",
														"nodeType": "YulTypedName",
														"src": "8714:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8725:11:5",
														"nodeType": "YulTypedName",
														"src": "8725:11:5",
														"type": ""
													}
												],
												"src": "8641:169:5"
											},
											{
												"body": {
													"nativeSrc": "8922:47:5",
													"nodeType": "YulBlock",
													"src": "8922:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8944:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8944:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8952:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8952:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8940:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8940:3:5"
																		},
																		"nativeSrc": "8940:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8940:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "8956:5:5",
																		"nodeType": "YulLiteral",
																		"src": "8956:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8933:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8933:6:5"
																},
																"nativeSrc": "8933:29:5",
																"nodeType": "YulFunctionCall",
																"src": "8933:29:5"
															},
															"nativeSrc": "8933:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "8933:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "8816:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8914:6:5",
														"nodeType": "YulTypedName",
														"src": "8914:6:5",
														"type": ""
													}
												],
												"src": "8816:153:5"
											},
											{
												"body": {
													"nativeSrc": "9121:219:5",
													"nodeType": "YulBlock",
													"src": "9121:219:5",
													"statements": [
														{
															"nativeSrc": "9131:73:5",
															"nodeType": "YulAssignment",
															"src": "9131:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9197:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9197:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9202:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9202:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9138:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9138:58:5"
																},
																"nativeSrc": "9138:66:5",
																"nodeType": "YulFunctionCall",
																"src": "9138:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9131:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9131:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9302:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9302:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "9213:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9213:88:5"
																},
																"nativeSrc": "9213:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9213:93:5"
															},
															"nativeSrc": "9213:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9213:93:5"
														},
														{
															"nativeSrc": "9315:19:5",
															"nodeType": "YulAssignment",
															"src": "9315:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9326:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9326:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9331:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9331:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9322:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9322:3:5"
																},
																"nativeSrc": "9322:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9322:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9315:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8975:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9109:3:5",
														"nodeType": "YulTypedName",
														"src": "9109:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9117:3:5",
														"nodeType": "YulTypedName",
														"src": "9117:3:5",
														"type": ""
													}
												],
												"src": "8975:365:5"
											},
											{
												"body": {
													"nativeSrc": "9517:248:5",
													"nodeType": "YulBlock",
													"src": "9517:248:5",
													"statements": [
														{
															"nativeSrc": "9527:26:5",
															"nodeType": "YulAssignment",
															"src": "9527:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9539:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9539:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9550:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9550:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9535:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9535:3:5"
																},
																"nativeSrc": "9535:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9535:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9527:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9527:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9574:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9574:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9585:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9585:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9570:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9570:3:5"
																		},
																		"nativeSrc": "9570:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9570:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9593:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9593:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9599:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9599:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9589:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9589:3:5"
																		},
																		"nativeSrc": "9589:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9589:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9563:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9563:6:5"
																},
																"nativeSrc": "9563:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9563:47:5"
															},
															"nativeSrc": "9563:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9563:47:5"
														},
														{
															"nativeSrc": "9619:139:5",
															"nodeType": "YulAssignment",
															"src": "9619:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9753:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9753:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9627:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9627:124:5"
																},
																"nativeSrc": "9627:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9627:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9619:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9619:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9346:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9497:9:5",
														"nodeType": "YulTypedName",
														"src": "9497:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9512:4:5",
														"nodeType": "YulTypedName",
														"src": "9512:4:5",
														"type": ""
													}
												],
												"src": "9346:419:5"
											},
											{
												"body": {
													"nativeSrc": "9897:206:5",
													"nodeType": "YulBlock",
													"src": "9897:206:5",
													"statements": [
														{
															"nativeSrc": "9907:26:5",
															"nodeType": "YulAssignment",
															"src": "9907:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9919:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9919:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9930:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9930:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9915:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9915:3:5"
																},
																"nativeSrc": "9915:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9915:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9907:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9987:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9987:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10000:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10000:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10011:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10011:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9996:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9996:3:5"
																		},
																		"nativeSrc": "9996:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9996:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9943:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9943:43:5"
																},
																"nativeSrc": "9943:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9943:71:5"
															},
															"nativeSrc": "9943:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9943:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10068:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10068:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10081:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10081:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10092:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10092:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10077:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10077:3:5"
																		},
																		"nativeSrc": "10077:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10077:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10024:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10024:43:5"
																},
																"nativeSrc": "10024:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10024:72:5"
															},
															"nativeSrc": "10024:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10024:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9771:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9861:9:5",
														"nodeType": "YulTypedName",
														"src": "9861:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9873:6:5",
														"nodeType": "YulTypedName",
														"src": "9873:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9881:6:5",
														"nodeType": "YulTypedName",
														"src": "9881:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9892:4:5",
														"nodeType": "YulTypedName",
														"src": "9892:4:5",
														"type": ""
													}
												],
												"src": "9771:332:5"
											},
											{
												"body": {
													"nativeSrc": "10215:46:5",
													"nodeType": "YulBlock",
													"src": "10215:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10237:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10237:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10245:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10245:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10233:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10233:3:5"
																		},
																		"nativeSrc": "10233:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10233:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "10249:4:5",
																		"nodeType": "YulLiteral",
																		"src": "10249:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10226:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10226:6:5"
																},
																"nativeSrc": "10226:28:5",
																"nodeType": "YulFunctionCall",
																"src": "10226:28:5"
															},
															"nativeSrc": "10226:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "10226:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "10109:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10207:6:5",
														"nodeType": "YulTypedName",
														"src": "10207:6:5",
														"type": ""
													}
												],
												"src": "10109:152:5"
											},
											{
												"body": {
													"nativeSrc": "10413:219:5",
													"nodeType": "YulBlock",
													"src": "10413:219:5",
													"statements": [
														{
															"nativeSrc": "10423:73:5",
															"nodeType": "YulAssignment",
															"src": "10423:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10489:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10489:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10494:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10494:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10430:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10430:58:5"
																},
																"nativeSrc": "10430:66:5",
																"nodeType": "YulFunctionCall",
																"src": "10430:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10423:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10423:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10594:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10594:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "10505:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10505:88:5"
																},
																"nativeSrc": "10505:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10505:93:5"
															},
															"nativeSrc": "10505:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10505:93:5"
														},
														{
															"nativeSrc": "10607:19:5",
															"nodeType": "YulAssignment",
															"src": "10607:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10618:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10618:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10623:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10623:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10614:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10614:3:5"
																},
																"nativeSrc": "10614:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10614:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10607:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10607:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10267:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10401:3:5",
														"nodeType": "YulTypedName",
														"src": "10401:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10409:3:5",
														"nodeType": "YulTypedName",
														"src": "10409:3:5",
														"type": ""
													}
												],
												"src": "10267:365:5"
											},
											{
												"body": {
													"nativeSrc": "10809:248:5",
													"nodeType": "YulBlock",
													"src": "10809:248:5",
													"statements": [
														{
															"nativeSrc": "10819:26:5",
															"nodeType": "YulAssignment",
															"src": "10819:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10831:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10831:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10842:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10842:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10827:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10827:3:5"
																},
																"nativeSrc": "10827:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10827:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10819:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10819:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10866:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10866:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10877:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10877:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10862:3:5"
																		},
																		"nativeSrc": "10862:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10862:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10885:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10885:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10891:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10891:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10881:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10881:3:5"
																		},
																		"nativeSrc": "10881:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10881:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10855:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10855:6:5"
																},
																"nativeSrc": "10855:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10855:47:5"
															},
															"nativeSrc": "10855:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10855:47:5"
														},
														{
															"nativeSrc": "10911:139:5",
															"nodeType": "YulAssignment",
															"src": "10911:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11045:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11045:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10919:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10919:124:5"
																},
																"nativeSrc": "10919:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10919:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10911:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10911:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10638:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10789:9:5",
														"nodeType": "YulTypedName",
														"src": "10789:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10804:4:5",
														"nodeType": "YulTypedName",
														"src": "10804:4:5",
														"type": ""
													}
												],
												"src": "10638:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"370": [
									{
										"length": 32,
										"start": 313
									},
									{
										"length": 32,
										"start": 406
									},
									{
										"length": 32,
										"start": 643
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80636a5dae381461005957806372f5d98a14610077578063ab8feb0214610095578063c31c9c07146100b3578063eb90cec1146100d1575b5f80fd5b610061610101565b60405161006e9190610604565b60405180910390f35b61007f610119565b60405161008c919061063a565b60405180910390f35b61009d61011f565b6040516100aa9190610604565b60405180910390f35b6100bb610137565b6040516100c891906106ae565b60405180910390f35b6100eb60048036038101906100e691906106fe565b61015b565b6040516100f89190610738565b60405180910390f35b73ac51c04cb72a5d0f56d71baf3e2f2b28e642692281565b610bb881565b73221c91a7fdb68c855a8a52ca7f18f2dcedac8c2b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f61017c73ac51c04cb72a5d0f56d71baf3e2f2b28e6426922333085610324565b6101bb73ac51c04cb72a5d0f56d71baf3e2f2b28e64269227f000000000000000000000000000000000000000000000000000000000000000084610476565b5f805f60405180610100016040528073ac51c04cb72a5d0f56d71baf3e2f2b28e642692273ffffffffffffffffffffffffffffffffffffffff16815260200173221c91a7fdb68c855a8a52ca7f18f2dcedac8c2b73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102da919061082d565b6020604051808303815f875af11580156102f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031a919061085b565b9350505050919050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161035a93929190610886565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103c4919061090d565b5f604051808303815f865af19150503d805f81146103fd576040519150601f19603f3d011682016040523d82523d5f602084013e610402565b606091505b509150915081801561042f57505f8151148061042e57508080602001905181019061042d9190610958565b5b5b61046e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610465906109dd565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016104aa9291906109fb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610514919061090d565b5f604051808303815f865af19150503d805f811461054d576040519150601f19603f3d011682016040523d82523d5f602084013e610552565b606091505b509150915081801561057f57505f8151148061057e57508080602001905181019061057d9190610958565b5b5b6105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590610a6c565b60405180910390fd5b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105ee826105c5565b9050919050565b6105fe816105e4565b82525050565b5f6020820190506106175f8301846105f5565b92915050565b5f62ffffff82169050919050565b6106348161061d565b82525050565b5f60208201905061064d5f83018461062b565b92915050565b5f819050919050565b5f61067661067161066c846105c5565b610653565b6105c5565b9050919050565b5f6106878261065c565b9050919050565b5f6106988261067d565b9050919050565b6106a88161068e565b82525050565b5f6020820190506106c15f83018461069f565b92915050565b5f80fd5b5f819050919050565b6106dd816106cb565b81146106e7575f80fd5b50565b5f813590506106f8816106d4565b92915050565b5f60208284031215610713576107126106c7565b5b5f610720848285016106ea565b91505092915050565b610732816106cb565b82525050565b5f60208201905061074b5f830184610729565b92915050565b61075a816105e4565b82525050565b6107698161061d565b82525050565b610778816106cb565b82525050565b610787816105c5565b82525050565b61010082015f8201516107a25f850182610751565b5060208201516107b56020850182610751565b5060408201516107c86040850182610760565b5060608201516107db6060850182610751565b5060808201516107ee608085018261076f565b5060a082015161080160a085018261076f565b5060c082015161081460c085018261076f565b5060e082015161082760e085018261077e565b50505050565b5f610100820190506108415f83018461078d565b92915050565b5f81519050610855816106d4565b92915050565b5f602082840312156108705761086f6106c7565b5b5f61087d84828501610847565b91505092915050565b5f6060820190506108995f8301866105f5565b6108a660208301856105f5565b6108b36040830184610729565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6108e7826108bb565b6108f181856108c5565b93506109018185602086016108cf565b80840191505092915050565b5f61091882846108dd565b915081905092915050565b5f8115159050919050565b61093781610923565b8114610941575f80fd5b50565b5f815190506109528161092e565b92915050565b5f6020828403121561096d5761096c6106c7565b5b5f61097a84828501610944565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f6109c7600383610983565b91506109d282610993565b602082019050919050565b5f6020820190508181035f8301526109f4816109bb565b9050919050565b5f604082019050610a0e5f8301856105f5565b610a1b6020830184610729565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f610a56600283610983565b9150610a6182610a22565b602082019050919050565b5f6020820190508181035f830152610a8381610a4a565b905091905056fea2646970667358221220974b96ea8fb283d3a215fb54c45c2447171a0ebe2a4125580b67ef256260bc4964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A5DAE38 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x72F5D98A EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xAB8FEB02 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xEB90CEC1 EQ PUSH2 0xD1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 DUP2 JUMP JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0x221C91A7FDB68C855A8A52CA7F18F2DCEDAC8C2B DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x17C PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 CALLER ADDRESS DUP6 PUSH2 0x324 JUMP JUMPDEST PUSH2 0x1BB PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 PUSH32 0x0 DUP5 PUSH2 0x476 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xAC51C04CB72A5D0F56D71BAF3E2F2B28E6426922 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x221C91A7FDB68C855A8A52CA7F18F2DCEDAC8C2B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x35A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x90D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x402 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x42F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x42E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x465 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x90D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x552 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x57F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x57E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5EE DUP3 PUSH2 0x5C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x617 PUSH0 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x634 DUP2 PUSH2 0x61D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x64D PUSH0 DUP4 ADD DUP5 PUSH2 0x62B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x676 PUSH2 0x671 PUSH2 0x66C DUP5 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x687 DUP3 PUSH2 0x65C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x698 DUP3 PUSH2 0x67D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP2 PUSH2 0x68E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x69F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DD DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP2 EQ PUSH2 0x6E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F8 DUP2 PUSH2 0x6D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x713 JUMPI PUSH2 0x712 PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x720 DUP5 DUP3 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74B PUSH0 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0x61D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x787 DUP2 PUSH2 0x5C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x7A2 PUSH0 DUP6 ADD DUP3 PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7B5 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7C8 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x760 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x7DB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7EE PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x76F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x801 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x76F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x814 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x76F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x827 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x77E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x841 PUSH0 DUP4 ADD DUP5 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x855 DUP2 PUSH2 0x6D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x87D DUP5 DUP3 DUP6 ADD PUSH2 0x847 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x899 PUSH0 DUP4 ADD DUP7 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x8A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x8B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E7 DUP3 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x8F1 DUP2 DUP6 PUSH2 0x8C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x901 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8CF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x918 DUP3 DUP5 PUSH2 0x8DD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x937 DUP2 PUSH2 0x923 JUMP JUMPDEST DUP2 EQ PUSH2 0x941 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x952 DUP2 PUSH2 0x92E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96D JUMPI PUSH2 0x96C PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x97A DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9C7 PUSH1 0x3 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D2 DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9F4 DUP2 PUSH2 0x9BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA0E PUSH0 DUP4 ADD DUP6 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0xA1B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x729 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA56 PUSH1 0x2 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP3 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA83 DUP2 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x4B SWAP7 0xEA DUP16 0xB2 DUP4 0xD3 LOG2 ISZERO 0xFB SLOAD 0xC4 TLOAD 0x24 SELFBALANCE OR BYTE 0xE 0xBE 0x2A COINBASE 0x25 PC SIGNEXTEND PUSH8 0xEF256260BC496473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "232:1613:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;381:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;460:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;303:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:1255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;381:73;412:42;381:73;:::o;460:37::-;493:4;460:37;:::o;303:72::-;333:42;303:72;:::o;258:39::-;;;:::o;588:1255::-;662:17;758:132;412:42;821:10;853:4;872:8;758:31;:132::i;:::-;945:63;412:42;986:10;999:8;945:26;:63::i;:::-;1123:14;1178:18;1305:48;1356:362;;;;;;;;412:42;1356:362;;;;;;333:42;1356:362;;;;;;493:4;1356:362;;;;;;1525:10;1356:362;;;;;;1563:15;1356:362;;;;1606:8;1356:362;;;;1650:6;1356:362;;;;1693:10;1356:362;;;;;1305:413;;1801:10;:27;;;1829:6;1801:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1789:47;;681:1162;;;588:1255;;;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:91::-;629:7;669:8;662:5;658:20;647:31;;593:91;;;:::o;690:115::-;775:23;792:5;775:23;:::i;:::-;770:3;763:36;690:115;;:::o;811:218::-;902:4;940:2;929:9;925:18;917:26;;953:69;1019:1;1008:9;1004:17;995:6;953:69;:::i;:::-;811:218;;;;:::o;1035:60::-;1063:3;1084:5;1077:12;;1035:60;;;:::o;1101:142::-;1151:9;1184:53;1202:34;1211:24;1229:5;1211:24;:::i;:::-;1202:34;:::i;:::-;1184:53;:::i;:::-;1171:66;;1101:142;;;:::o;1249:126::-;1299:9;1332:37;1363:5;1332:37;:::i;:::-;1319:50;;1249:126;;;:::o;1381:145::-;1450:9;1483:37;1514:5;1483:37;:::i;:::-;1470:50;;1381:145;;;:::o;1532:169::-;1638:56;1688:5;1638:56;:::i;:::-;1633:3;1626:69;1532:169;;:::o;1707:260::-;1819:4;1857:2;1846:9;1842:18;1834:26;;1870:90;1957:1;1946:9;1942:17;1933:6;1870:90;:::i;:::-;1707:260;;;;:::o;2054:117::-;2163:1;2160;2153:12;2300:77;2337:7;2366:5;2355:16;;2300:77;;;:::o;2383:122::-;2456:24;2474:5;2456:24;:::i;:::-;2449:5;2446:35;2436:63;;2495:1;2492;2485:12;2436:63;2383:122;:::o;2511:139::-;2557:5;2595:6;2582:20;2573:29;;2611:33;2638:5;2611:33;:::i;:::-;2511:139;;;;:::o;2656:329::-;2715:6;2764:2;2752:9;2743:7;2739:23;2735:32;2732:119;;;2770:79;;:::i;:::-;2732:119;2890:1;2915:53;2960:7;2951:6;2940:9;2936:22;2915:53;:::i;:::-;2905:63;;2861:117;2656:329;;;;:::o;2991:118::-;3078:24;3096:5;3078:24;:::i;:::-;3073:3;3066:37;2991:118;;:::o;3115:222::-;3208:4;3246:2;3235:9;3231:18;3223:26;;3259:71;3327:1;3316:9;3312:17;3303:6;3259:71;:::i;:::-;3115:222;;;;:::o;3343:108::-;3420:24;3438:5;3420:24;:::i;:::-;3415:3;3408:37;3343:108;;:::o;3457:105::-;3532:23;3549:5;3532:23;:::i;:::-;3527:3;3520:36;3457:105;;:::o;3568:108::-;3645:24;3663:5;3645:24;:::i;:::-;3640:3;3633:37;3568:108;;:::o;3682:::-;3759:24;3777:5;3759:24;:::i;:::-;3754:3;3747:37;3682:108;;:::o;3890:1623::-;4065:6;4060:3;4056:16;4157:4;4150:5;4146:16;4140:23;4176:63;4233:4;4228:3;4224:14;4210:12;4176:63;:::i;:::-;4082:167;4335:4;4328:5;4324:16;4318:23;4354:63;4411:4;4406:3;4402:14;4388:12;4354:63;:::i;:::-;4259:168;4508:4;4501:5;4497:16;4491:23;4527:61;4582:4;4577:3;4573:14;4559:12;4527:61;:::i;:::-;4437:161;4685:4;4678:5;4674:16;4668:23;4704:63;4761:4;4756:3;4752:14;4738:12;4704:63;:::i;:::-;4608:169;4863:4;4856:5;4852:16;4846:23;4882:63;4939:4;4934:3;4930:14;4916:12;4882:63;:::i;:::-;4787:168;5041:4;5034:5;5030:16;5024:23;5060:63;5117:4;5112:3;5108:14;5094:12;5060:63;:::i;:::-;4965:168;5227:4;5220:5;5216:16;5210:23;5246:63;5303:4;5298:3;5294:14;5280:12;5246:63;:::i;:::-;5143:176;5414:4;5407:5;5403:16;5397:23;5433:63;5490:4;5485:3;5481:14;5467:12;5433:63;:::i;:::-;5329:177;4034:1479;3890:1623;;:::o;5519:379::-;5690:4;5728:3;5717:9;5713:19;5705:27;;5742:149;5888:1;5877:9;5873:17;5864:6;5742:149;:::i;:::-;5519:379;;;;:::o;5904:143::-;5961:5;5992:6;5986:13;5977:22;;6008:33;6035:5;6008:33;:::i;:::-;5904:143;;;;:::o;6053:351::-;6123:6;6172:2;6160:9;6151:7;6147:23;6143:32;6140:119;;;6178:79;;:::i;:::-;6140:119;6298:1;6323:64;6379:7;6370:6;6359:9;6355:22;6323:64;:::i;:::-;6313:74;;6269:128;6053:351;;;;:::o;6410:442::-;6559:4;6597:2;6586:9;6582:18;6574:26;;6610:71;6678:1;6667:9;6663:17;6654:6;6610:71;:::i;:::-;6691:72;6759:2;6748:9;6744:18;6735:6;6691:72;:::i;:::-;6773;6841:2;6830:9;6826:18;6817:6;6773:72;:::i;:::-;6410:442;;;;;;:::o;6858:98::-;6909:6;6943:5;6937:12;6927:22;;6858:98;;;:::o;6962:147::-;7063:11;7100:3;7085:18;;6962:147;;;;:::o;7115:139::-;7204:6;7199:3;7194;7188:23;7245:1;7236:6;7231:3;7227:16;7220:27;7115:139;;;:::o;7260:386::-;7364:3;7392:38;7424:5;7392:38;:::i;:::-;7446:88;7527:6;7522:3;7446:88;:::i;:::-;7439:95;;7543:65;7601:6;7596:3;7589:4;7582:5;7578:16;7543:65;:::i;:::-;7633:6;7628:3;7624:16;7617:23;;7368:278;7260:386;;;;:::o;7652:271::-;7782:3;7804:93;7893:3;7884:6;7804:93;:::i;:::-;7797:100;;7914:3;7907:10;;7652:271;;;;:::o;7929:90::-;7963:7;8006:5;7999:13;7992:21;7981:32;;7929:90;;;:::o;8025:116::-;8095:21;8110:5;8095:21;:::i;:::-;8088:5;8085:32;8075:60;;8131:1;8128;8121:12;8075:60;8025:116;:::o;8147:137::-;8201:5;8232:6;8226:13;8217:22;;8248:30;8272:5;8248:30;:::i;:::-;8147:137;;;;:::o;8290:345::-;8357:6;8406:2;8394:9;8385:7;8381:23;8377:32;8374:119;;;8412:79;;:::i;:::-;8374:119;8532:1;8557:61;8610:7;8601:6;8590:9;8586:22;8557:61;:::i;:::-;8547:71;;8503:125;8290:345;;;;:::o;8641:169::-;8725:11;8759:6;8754:3;8747:19;8799:4;8794:3;8790:14;8775:29;;8641:169;;;;:::o;8816:153::-;8956:5;8952:1;8944:6;8940:14;8933:29;8816:153;:::o;8975:365::-;9117:3;9138:66;9202:1;9197:3;9138:66;:::i;:::-;9131:73;;9213:93;9302:3;9213:93;:::i;:::-;9331:2;9326:3;9322:12;9315:19;;8975:365;;;:::o;9346:419::-;9512:4;9550:2;9539:9;9535:18;9527:26;;9599:9;9593:4;9589:20;9585:1;9574:9;9570:17;9563:47;9627:131;9753:4;9627:131;:::i;:::-;9619:139;;9346:419;;;:::o;9771:332::-;9892:4;9930:2;9919:9;9915:18;9907:26;;9943:71;10011:1;10000:9;9996:17;9987:6;9943:71;:::i;:::-;10024:72;10092:2;10081:9;10077:18;10068:6;10024:72;:::i;:::-;9771:332;;;;;:::o;10109:152::-;10249:4;10245:1;10237:6;10233:14;10226:28;10109:152;:::o;10267:365::-;10409:3;10430:66;10494:1;10489:3;10430:66;:::i;:::-;10423:73;;10505:93;10594:3;10505:93;:::i;:::-;10623:2;10618:3;10614:12;10607:19;;10267:365;;;:::o;10638:419::-;10804:4;10842:2;10831:9;10827:18;10819:26;;10891:9;10885:4;10881:20;10877:1;10866:9;10862:17;10855:47;10919:131;11045:4;10919:131;:::i;:::-;10911:139;;10638:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "550400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TKN()": "395",
								"VTRU()": "351",
								"feeTier()": "331",
								"swapRouter()": "infinite",
								"swapVTRUForTKN(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 582,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 582,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 582,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 504,
									"end": 582,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 504,
									"end": 582,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 504,
									"end": 582,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 504,
									"end": 582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 504,
									"end": 582,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 564,
									"end": 575,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 551,
									"end": 575,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 551,
									"end": 575,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 551,
									"end": 575,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 551,
									"end": 575,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 551,
									"end": 575,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 551,
									"end": 575,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 551,
									"end": 575,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 551,
									"end": 575,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 551,
									"end": 575,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 551,
									"end": 575,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 504,
									"end": 582,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1183,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1186,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1395,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1331,
									"end": 1414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "370"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1845,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220974b96ea8fb283d3a215fb54c45c2447171a0ebe2a4125580b67ef256260bc4964736f6c634300081a0033",
									".code": [
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "6A5DAE38"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "72F5D98A"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "AB8FEB02"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "EB90CEC1"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1845,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 381,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 460,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 303,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 303,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 258,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 588,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 588,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 588,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 412,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "AC51C04CB72A5D0F56D71BAF3E2F2B28E6426922"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 493,
											"end": 497,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 460,
											"end": 497,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 460,
											"end": 497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 333,
											"end": 375,
											"name": "PUSH",
											"source": 4,
											"value": "221C91A7FDB68C855A8A52CA7F18F2DCEDAC8C2B"
										},
										{
											"begin": 303,
											"end": 375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 258,
											"end": 297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 258,
											"end": 297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 662,
											"end": 679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 412,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "AC51C04CB72A5D0F56D71BAF3E2F2B28E6426922"
										},
										{
											"begin": 821,
											"end": 831,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 853,
											"end": 857,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 872,
											"end": 880,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 758,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 890,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 758,
											"end": 890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 945,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 412,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "AC51C04CB72A5D0F56D71BAF3E2F2B28E6426922"
										},
										{
											"begin": 986,
											"end": 996,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 999,
											"end": 1007,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 945,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 945,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 945,
											"end": 1008,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 945,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 412,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "AC51C04CB72A5D0F56D71BAF3E2F2B28E6426922"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 333,
											"end": 375,
											"name": "PUSH",
											"source": 4,
											"value": "221C91A7FDB68C855A8A52CA7F18F2DCEDAC8C2B"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 493,
											"end": 497,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1614,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1703,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 1801,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1828,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1801,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1801,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1801,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1836,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 1843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 1843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 1843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 1843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 593,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 629,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 677,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 662,
											"end": 667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 658,
											"end": 678,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 647,
											"end": 678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 647,
											"end": 678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 593,
											"end": 684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 593,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 805,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 690,
											"end": 805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 792,
											"end": 797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 775,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 763,
											"end": 799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 690,
											"end": 805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 811,
											"end": 1029,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 811,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 902,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 917,
											"end": 943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 917,
											"end": 943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 953,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 811,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 811,
											"end": 1029,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 811,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 811,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 811,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1211,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1202,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1184,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1332,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1483,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1638,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1695,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1957,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1959,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1870,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1870,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2171,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2054,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2377,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2300,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2505,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2383,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2474,
											"end": 2479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2456,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2436,
											"end": 2499,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2499,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2436,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2601,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2602,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2638,
											"end": 2643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2611,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2644,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2611,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2985,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2656,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2766,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2750,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2762,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2767,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2851,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2732,
											"end": 2851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2770,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2770,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2770,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2732,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2915,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2968,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2915,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2985,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3109,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2991,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3078,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3102,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3078,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3076,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3337,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3115,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3259,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3330,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3259,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3337,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3451,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3343,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3438,
											"end": 3443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3420,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3445,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3562,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3457,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3532,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3555,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3532,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3676,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3568,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3663,
											"end": 3668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3645,
											"end": 3669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3669,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3645,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3633,
											"end": 3670,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3790,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3682,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3777,
											"end": 3782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3759,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3783,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3759,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 5513,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3890,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4060,
											"end": 4063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4056,
											"end": 4072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4146,
											"end": 4162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4163,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4231,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4176,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4239,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4176,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4339,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4318,
											"end": 4341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4354,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4417,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4354,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4508,
											"end": 4512,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4501,
											"end": 4506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4514,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4582,
											"end": 4586,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4573,
											"end": 4587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4527,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4588,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4527,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4689,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4678,
											"end": 4683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4704,
											"end": 4767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4939,
											"end": 4943,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4934,
											"end": 4937,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4882,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4945,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4882,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5045,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5047,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5117,
											"end": 5121,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5060,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5123,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5060,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 5133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5231,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5220,
											"end": 5225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5233,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5303,
											"end": 5307,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5298,
											"end": 5301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5308,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5246,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5309,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5246,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5490,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5485,
											"end": 5488,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5433,
											"end": 5496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5496,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5433,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4034,
											"end": 5513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 5513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 5513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 5513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5898,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5519,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5731,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5888,
											"end": 5889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5877,
											"end": 5886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5870,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5742,
											"end": 5891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5891,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5742,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5898,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 6047,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5904,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 5999,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6035,
											"end": 6040,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 6008,
											"end": 6041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6041,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6008,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 6047,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 6047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 6047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 6047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 6047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6404,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 6053,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6174,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6160,
											"end": 6169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6158,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6170,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6175,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6259,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6140,
											"end": 6259,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6178,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 6178,
											"end": 6257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6257,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6178,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6140,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6323,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6379,
											"end": 6386,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6368,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6323,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6387,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6323,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6313,
											"end": 6387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6313,
											"end": 6387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6404,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6563,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6586,
											"end": 6595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6582,
											"end": 6600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6678,
											"end": 6679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6667,
											"end": 6676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6663,
											"end": 6680,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6610,
											"end": 6681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6681,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6610,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6735,
											"end": 6741,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6691,
											"end": 6763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6841,
											"end": 6843,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6823,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6773,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6956,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6858,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6937,
											"end": 6949,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7109,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6962,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7109,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7197,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7236,
											"end": 7242,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7231,
											"end": 7234,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7220,
											"end": 7247,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7646,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7260,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 7424,
											"end": 7429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7392,
											"end": 7430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7430,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 7392,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 7527,
											"end": 7533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7522,
											"end": 7525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7446,
											"end": 7534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7534,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 7446,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7439,
											"end": 7534,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7439,
											"end": 7534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7543,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7596,
											"end": 7599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7587,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7578,
											"end": 7594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7543,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 7543,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7543,
											"end": 7608,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7543,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7631,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7617,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7617,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7646,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7923,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7652,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7782,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7893,
											"end": 7896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7804,
											"end": 7897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7897,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7804,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7914,
											"end": 7917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7907,
											"end": 7917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7907,
											"end": 7917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7923,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7923,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 8019,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7929,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8012,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8013,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 8019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 8019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 8019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 8019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8025,
											"end": 8141,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8025,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8110,
											"end": 8115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8095,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8088,
											"end": 8093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8085,
											"end": 8117,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8075,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8075,
											"end": 8135,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8133,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8075,
											"end": 8135,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8075,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8025,
											"end": 8141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8025,
											"end": 8141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8284,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 8147,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8217,
											"end": 8239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8217,
											"end": 8239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8248,
											"end": 8278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8278,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 8248,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8284,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8635,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 8290,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8357,
											"end": 8363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8394,
											"end": 8403,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8385,
											"end": 8392,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8381,
											"end": 8404,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8409,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8374,
											"end": 8493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8374,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8374,
											"end": 8493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8412,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 8412,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8491,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8412,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8374,
											"end": 8493,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8374,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8532,
											"end": 8533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8610,
											"end": 8617,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8601,
											"end": 8607,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8590,
											"end": 8599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8586,
											"end": 8608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 8557,
											"end": 8618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8618,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8557,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8618,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8503,
											"end": 8628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8635,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8810,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8641,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8725,
											"end": 8736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8759,
											"end": 8765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8747,
											"end": 8766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8794,
											"end": 8797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8790,
											"end": 8804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8810,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8810,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8969,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8816,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8961,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 8954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9340,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8975,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9117,
											"end": 9120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9197,
											"end": 9200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9138,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 9138,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9138,
											"end": 9204,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9138,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9213,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9302,
											"end": 9305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9213,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 9213,
											"end": 9306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9213,
											"end": 9306,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9213,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9333,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9326,
											"end": 9329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9765,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 9346,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9512,
											"end": 9516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9552,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9539,
											"end": 9548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9535,
											"end": 9553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9527,
											"end": 9553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9527,
											"end": 9553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9599,
											"end": 9608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9593,
											"end": 9597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9589,
											"end": 9609,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9585,
											"end": 9586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9574,
											"end": 9583,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9570,
											"end": 9587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9563,
											"end": 9610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9627,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9753,
											"end": 9757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9627,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9627,
											"end": 9758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9627,
											"end": 9758,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9627,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 10103,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 9771,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9919,
											"end": 9928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 10011,
											"end": 10012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10009,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9996,
											"end": 10013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 9993,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 9943,
											"end": 10014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10014,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 9943,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 10092,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10081,
											"end": 10090,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10068,
											"end": 10074,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 10024,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 10103,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 10103,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 10103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 10103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 10103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 10103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10109,
											"end": 10261,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10109,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10245,
											"end": 10246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10226,
											"end": 10254,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10109,
											"end": 10261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10109,
											"end": 10261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10632,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10267,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10409,
											"end": 10412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10430,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 10494,
											"end": 10495,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10489,
											"end": 10492,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10430,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10430,
											"end": 10496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10430,
											"end": 10496,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 10430,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10423,
											"end": 10496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10423,
											"end": 10496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10505,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 10594,
											"end": 10597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10505,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10505,
											"end": 10598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10505,
											"end": 10598,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 10505,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10623,
											"end": 10625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10618,
											"end": 10621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10614,
											"end": 10626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10607,
											"end": 10626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10607,
											"end": 10626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10632,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 11057,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 10638,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10831,
											"end": 10840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10891,
											"end": 10900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10881,
											"end": 10901,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10862,
											"end": 10879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10855,
											"end": 10902,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 11045,
											"end": 11049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10919,
											"end": 11050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 11050,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 10919,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10911,
											"end": 11050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10911,
											"end": 11050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 11057,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 11057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 11057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 11057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TKN()": "ab8feb02",
							"VTRU()": "6a5dae38",
							"feeTier()": "72f5d98a",
							"swapRouter()": "c31c9c07",
							"swapVTRUForTKN(uint256)": "eb90cec1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TKN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VTRU\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapVTRUForTKN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0xa637b037bf647debef495ed818347943d97719d0bcd9f004b747a78dff060c4d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1bc84ee9c39a9ea17a07b938976959c519ee5c80141a6c8964fe91f37aec77fd\",\"dweb:/ipfs/QmQrJBeK6tpq6vLhFzCqk1HP2vetYxHZBkKuasHeyVVb7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleSwap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SimpleSwap": [
							457
						],
						"TransferHelper": [
							362
						]
					},
					"id": 458,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"id": 365,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 192,
							"src": "91:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 363,
							"src": "160:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "SimpleSwap",
							"nameLocation": "241:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 370,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "287:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "258:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 369,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 368,
											"name": "ISwapRouter",
											"nameLocations": [
												"258:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "258:11:4"
										},
										"referencedDeclaration": 191,
										"src": "258:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ab8feb02",
									"id": 373,
									"mutability": "constant",
									"name": "TKN",
									"nameLocation": "327:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "303:72:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "303:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832323163393161376644623638433835356138413532434137463138463264636564416338633262",
										"id": 372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "333:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x221c91a7fDb68C855a8A52CA7F18F2dcedAc8c2b"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6a5dae38",
									"id": 376,
									"mutability": "constant",
									"name": "VTRU",
									"nameLocation": "405:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "381:73:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 374,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841433531633034436237324135443046353644373142616633453246324232386536343236393232",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "412:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAC51c04Cb72A5D0F56D71Baf3E2F2B28e6426922"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "72f5d98a",
									"id": 379,
									"mutability": "constant",
									"name": "feeTier",
									"nameLocation": "483:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "460:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 377,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "460:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "493:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "541:41:4",
										"statements": [
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "551:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 386,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "564:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "551:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "551:24:4"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "528:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "516:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 380,
														"name": "ISwapRouter",
														"nameLocations": [
															"516:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "516:11:4"
													},
													"referencedDeclaration": 191,
													"src": "516:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:25:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:4"
									},
									"scope": 457,
									"src": "504:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "681:1162:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "VTRU",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "803:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "821:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "825:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "821:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 405,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "853:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$457",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$457",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "845:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 403,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "845:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "845:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "872:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 397,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "758:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "773:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "758:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:132:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "758:132:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "VTRU",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "972:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 416,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "986:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "978:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "978:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "999:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 410,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "945:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "960:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "945:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "945:63:4"
											},
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "minOut",
														"nameLocation": "1131:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "1123:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1123:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"hexValue": "30",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1167:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1123:45:4"
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "priceLimit",
														"nameLocation": "1186:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "1178:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 425,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1178:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"hexValue": "30",
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1227:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1178:50:4"
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1347:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "1305:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 432,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 431,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1305:11:4",
																	"1317:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1305:34:4"
															},
															"referencedDeclaration": 115,
															"src": "1305:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "VTRU",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "1431:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "TKN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1463:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "feeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "1489:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1525:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1529:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1525:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 441,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1563:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1569:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1563:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 443,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1606:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 444,
															"name": "minOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1650:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "priceLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "1693:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"id": 434,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1356:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1381:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1356:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1422:7:4",
														"1453:8:4",
														"1484:3:4",
														"1514:9:4",
														"1553:8:4",
														"1596:8:4",
														"1632:16:4",
														"1674:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1356:362:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1305:413:4"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 451,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "1829:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 449,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "1801:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1812:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "1801:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1801:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1789:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "1789:47:4"
											}
										]
									},
									"functionSelector": "eb90cec1",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapVTRUForTKN",
									"nameLocation": "597:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "629:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "621:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:32:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "670:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "662:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:19:4"
									},
									"scope": 457,
									"src": "588:1255:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 458,
							"src": "232:1613:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1800:4"
				},
				"id": 4
			}
		}
	}
}